/*
Copyright(c) 2011 Company Name
*/
Ext.define("LSP.view.user.New",{extend:"Ext.window.Window",alias:"widget.usernew",requires:["Ext.form.Panel"],title:"New user",layout:"fit",modal:true,autoShow:true,height:200,width:280,initComponent:function(){this.items=[{xtype:"form",padding:"5 5 0 5",border:false,style:"background-color: #fff;",items:[{name:"utf8",xtype:"hidden",value:"&#x2713;"},{name:"authenticity_token",xtype:"hidden",value:$$("meta[name=csrf-token]")[0].readAttribute("content")},{xtype:"textfield",name:"user[login]",fieldLabel:"Login"},{xtype:"textfield",name:"user[email]",fieldLabel:"Email"},{xtype:"textfield",name:"user[password]",inputType:"password",fieldLabel:"Password"},{xtype:"textfield",name:"user[password_confirmation]",inputType:"password",fieldLabel:"Password confirmation"}]}];this.buttons=[{text:"Save",action:"commit"},{text:"Cancel",scope:this,handler:this.close}];this.callParent(arguments)}});Ext.define("LSP.view.user.Logoutbutton",{extend:"Ext.Button",alias:"widget.logoutbutton",size:"small",text:"Log out",initComponent:function(){this.callParent(arguments)}});Ext.define("LSP.view.user.Loginbutton",{extend:"Ext.Button",alias:"widget.loginbutton",size:"small",text:"Log in",initComponent:function(){this.callParent(arguments)}});Ext.define("LSP.view.Settings",{extend:"Ext.form.Panel",alias:"widget.settingsform",height:"100%",initComponent:function(){this.items=[{xtype:"form",padding:"5 5 0 5",border:false,style:"background-color: #fff;",items:[{xtype:"label",text:"To use a different endpoint than the default Amsterdam VU one insert URL of sparql endpoint below and click save"},{xtype:"textarea",name:"endpoint",heigth:50,fieldLabel:"URL",emptyText:"Insert full URL to the sparql endpoint used, eg: http://10.11.93.218:8183/sparql",labelWidth:30},{name:"utf8",xtype:"hidden",value:"&#x2713;"},{name:"authenticity_token",xtype:"hidden",value:$$("meta[name=csrf-token]")[0].readAttribute("content")},{xtype:"button",text:"Save",action:"save_endpoint"}]}];this.callParent(arguments)}});Ext.define("LSP.view.user.Newbutton",{extend:"Ext.Button",alias:"widget.usernewbutton",size:"small",text:"Create account",initComponent:function(){this.callParent(arguments)}});Ext.define("LSP.store.NavigationTree",{extend:"Ext.data.TreeStore",proxy:{type:"ajax",url:"application_modules.json"}});Ext.define("LSP.view.Appmoduletree",{extend:"Ext.tree.Panel",alias:"widget.appmoduletree",requires:["Ext.data.TreeStore"],rootVisible:false,useArrows:true,frame:false,autoScroll:true,height:"100%",store:"NavigationTree",listeners:{itemclick:function(a,c,g,f,h,d){if(c.raw.application_type=="grid"){var b;Ext.getCmp("centerView").items.each(function(e){if(e.gridId==c.raw.id){b=e;return}});if(!b){b=Ext.widget(c.raw.xtype);b.setTitle(c.raw.home);b.url=c.raw.url;b.gridId=c.raw.id;Ext.getCmp("centerView").add(b)}Ext.getCmp("centerView").setActiveTab(b)}}},initComponent:function(){this.callParent(arguments)}});Ext.define("LSP.model.Grid",{extend:"Ext.data.Model",fields:[]});Ext.define("LSP.view.mol_editor_forms.KetcherForm",{extend:"Ext.window.Window",alias:"widget.KetcherForm",requires:["Ext.form.Panel"],title:"Draw structure",layout:"fit",modal:true,autoShow:true,height:570,width:810,initComponent:function(){this.items=[{xtype:"form",padding:"0 0 0 0",border:false,style:"background-color: #fff;",items:[{xtype:"box",width:800,height:520,id:"ketcher_box_id",autoEl:{tag:"iframe",src:"ketcher/ketcher.html"}}]}];this.buttons=[{text:"Use structure",action:"commit_structure"},{text:"Cancel",scope:this,handler:this.close}];this.callParent(arguments)}});Ext.define("LSP.view.larkc_sim_search.SimSearchForm",{extend:"Ext.form.Panel",alias:"widget.SimSearchForm",requires:["LSP.view.mol_editor_forms.KetcherForm"],closable:true,layout:{type:"vbox",align:"stretch"},initComponent:function(){this.items=[{xtype:"form",padding:"5 5 0 5",border:false,height:"100%",style:"background-color: #fff;",items:[{name:"molfile",xtype:"hidden",value:""},{xtype:"fieldcontainer",layout:"column",collapsible:false,defaults:{anchor:"100%"},items:[{xtype:"textfield",name:"smiles",emptyText:"Enter SMILES here or use the molecular editor to draw structure - click button ->",fieldLabel:"Search for compounds similar to SMILES",labelWidth:230,width:650},{xtype:"button",action:"ketcher_editor",text:"Draw structure"}]},{xtype:"radiogroup",fieldLabel:"Search type",items:[{boxLabel:"Exact structure search",name:"search_type",inputValue:1,checked:true},{boxLabel:"Substructure seach",name:"search_type",inputValue:2},{boxLabel:"Structural similarity search",name:"search_type",inputValue:3}]},{xtype:"button",action:"query",itemId:"sim_sss_start_search_button_id",text:"Start search..."},{xtype:"dynamicgrid3",readUrl:"/core_api_calls/get_chem_info4known_csids.json",title:"Structure search results",gridBaseTitle:"Structure search results",flex:1}]}];this.callParent(arguments)}});Ext.define("LSP.store.Grids",{extend:"Ext.data.Store",fields:[],proxy:{type:"ajax",api:{read:""},reader:{type:"json",root:"objects",totalProperty:"totalCount"}}});Ext.define("LSP.view.sparqlform.Queryform",{extend:"Ext.form.Panel",alias:"widget.queryform",closable:true,layout:{type:"vbox",align:"stretch"},initComponent:function(){this.items=[{xtype:"form",padding:"5 5 0 5",border:false,style:"background-color: #fff;",items:[{xtype:"textarea",name:"query",id:"query_id",fieldLabel:"SPARQL query",height:120,labelWidth:110,width:700,value:"SELECT *  WHERE { ?s ?p ?o}"},{xtype:"fieldcontainer",height:31,width:700,layout:{type:"column"},items:[{xtype:"numberfield",name:"limit",margin:"0 10 0 110",padding:"",width:190,fieldLabel:"Limit",labelWidth:110,autoStripChars:true,maxValue:100,minValue:1,value:10,allowDecimals:false},{xtype:"numberfield",name:"offset",margin:"0 10 0 0",width:190,fieldLabel:"Offset",labelWidth:110,maxValue:10000,minValue:0,value:0,allowDecimals:false}]},{xtype:"button",action:"query",text:"Submit query"}]},{xtype:"dynamicgrid3",title:"SPARQL query results",name:"sparql_query_results",flex:1}];this.callParent(arguments)}});Ext.define("LSP.model.DynamicGrid",{extend:"Ext.data.Model",config:{fields:[],proxy:{type:"ajax",timeout:"180000",api:{read:""},reader:{type:"json",root:"objects",totalProperty:"totalCount"}}},constructor:function(a){this.initConfig(a);return this}});Ext.define("LSP.view.target_by_name.TargetPanel",{extend:"Ext.panel.Panel",alias:"widget.TargetPanel",title:"Target Data",anchor:"100% 100%",autoScroll:true,bodyPadding:"10px",layout:"anchor",initComponent:function(){this.items=[{xtype:"panel",border:0,layout:"anchor",autoScroll:true,itemId:"dp",bodyPadding:"20px",cls:"target-data-panel",hidden:true,items:[{xtype:"panel",border:0,anchor:"100%",itemId:"topPanel",layout:"column",autoScroll:true,items:[{xtype:"image",itemId:"target_image",width:150,height:150,src:"/images/target_placeholder.png"},{xtype:"panel",bodyPadding:30,columnWidth:1,border:0,autoScroll:true,itemId:"textDataPanel",layout:"anchor",items:[{xtype:"displayfield",anchor:"100%",itemId:"target_name",fieldCls:"target-title"},{xtype:"displayfield",anchor:"100%",itemId:"target_type",fieldLabel:"Target Type",cls:"target-field-label"},{xtype:"displayfield",anchor:"100%",itemId:"organism",fieldLabel:"Organism",cls:"target-field-label"},{xtype:"displayfield",anchor:"100%",itemId:"description",fieldLabel:"Description",cls:"target-field-label"},{xtype:"displayfield",anchor:"100%",itemId:"synonyms",fieldLabel:"Synonyms",cls:"target-field-label"},{xtype:"displayfield",anchor:"100%",itemId:"specificFunction",fieldLabel:"Specific Function",cls:"target-field-label"},{xtype:"displayfield",anchor:"100%",itemId:"cellularLocation",fieldLabel:"Cellular Location",cls:"target-field-label"},{xtype:"displayfield",anchor:"100%",itemId:"keywords",fieldLabel:"Keywords",cls:"target-field-label"},{xtype:"displayfield",anchor:"100%",itemId:"pdbIdPage",fieldLabel:"PDB Entry",cls:"target-field-label"},{xtype:"panel",border:0,anchor:"100%",itemId:"numericDataPanel",layout:"column",bodyPadding:30,items:[{xtype:"displayfield",itemId:"molecularWeight",columnWidth:0.33,fieldLabel:"Molecular Weight",cls:"target-field-bottom",fieldCls:"target-field-bottom-field",labelAlign:"top"},{xtype:"displayfield",itemId:"numberOfResidues",columnWidth:0.33,fieldLabel:"Number of Residues",cls:"target-field-bottom",fieldCls:"target-field-bottom-field",labelAlign:"top"},{xtype:"displayfield",itemId:"theoreticalPi",columnWidth:0.33,fieldLabel:"Theoretical Pi",cls:"target-field-bottom",fieldCls:"target-field-bottom-field",labelAlign:"top"}]}]}]}]},{xtype:"displayfield",border:0,padding:"20px",itemId:"msg",region:"center",hidden:true,fieldCls:"target-message",value:"message here"}];var a=Ext.data.StoreManager.lookup("Targets");a.addListener("load",this.showData,this);this.callParent(arguments)},resetAllFields:function(){var b=this.query("displayfield");Ext.each(b,function(c){c.hide()},this);var a=this.down("#target_image");a.setSrc("/images/target_placeholder.png");this.doLayout()},showMessage:function(a){var c=this.down("#dp");var b=this.down("#msg");c.setVisible(false);b.setValue(a);b.setVisible(true)},showData:function(b,a,c){if(c){if(a.length>0){var e=this.down("#dp");var d=this.down("#msg");d.setVisible(false);this.setValues(b.first());e.setVisible(true)}else{this.showMessage("No records found within OPS for this search")}}else{this.showMessage("Server did not respond")}},clearDomBelow:function(a){if(a.hasChildNodes()){while(a.childNodes.length>0){a.removeChild(a.firstChild)}}},addKeywords:function(d){var f=d.split("; ");var c=this.down("#keywords");var a=c.bodyEl;var e=a.dom;this.clearDomBelow(e);var b=Ext.DomHelper.createTemplate({tag:"div",cls:"keyword",html:"{kw}"});Ext.each(f,function(g){b.append(a,{kw:g})},this);c.show()},addOrganism:function(e){var d=this.down("#organism");var a=d.bodyEl;var c=a.dom;this.clearDomBelow(c);var b=Ext.DomHelper.createTemplate({tag:"div",cls:"organism",html:"{org}"});b.append(a,{org:e});d.show()},addSynonyms:function(a){var f=a.split("; ");var c=this.down("#synonyms");var b=c.bodyEl;var e=b.dom;this.clearDomBelow(e);var d=Ext.DomHelper.createTemplate({tag:"div",cls:"synonym",html:"{syn}"});Ext.each(f,function(g){d.append(b,{syn:g})},this);c.show()},addPDBImage:function(c){var e=new String(c);var b=this.down("#target_image");var a=e.substr(e.lastIndexOf("=")+1);var d=this.down("#pdbIdPage");d.setRawValue("<a target='_blank' href='"+c+"'>"+a+"</a>");d.show();b.setSrc("http://www.rcsb.org/pdb/images/"+a+"_asr_r_250.jpg");b.show()},setFieldValue:function(a,b){if(a=="synonyms"){this.addSynonyms(b)}else{if(a=="keywords"){this.addKeywords(b)}else{if(a=="organism"){this.addOrganism(b)}else{if(a=="pdbIdPage"){this.addPDBImage(b)}else{var c=this.down("#"+a);c.setValue(b);c.show()}}}}},setValues:function(a){this.resetAllFields();var c=a.data;for(var b in c){if(c.hasOwnProperty(b)){this.setFieldValue(b,c[b])}}this.doLayout()},startLoading:function(){this.setLoading(true)},endLoading:function(){this.setLoading(false)}});Ext.define("LSP.view.cmpd_by_name.CmpdByNameSingleDisplayForm",{extend:"Ext.form.Panel",alias:"widget.CmpdByNameSingleDisplayForm",initComponent:function(){var a=this;Ext.applyIf(a,{xtype:"panel",bodyPadding:10,title:"Compound by Name search results",layout:"anchor",suspendLayout:true,autoScroll:true,items:[{xtype:"panel",itemId:"topPanelDetails",border:false,layout:"column",suspendLayout:true,hidden:true,items:[{xtype:"image",name:"image",itemId:"compound_form_imagepanel",width:150,height:150,src:""},{xtype:"panel",itemId:"dataPanel",bodyPadding:30,width:710,border:false,suspendLayout:true,fieldDefaults:{anchor:"100%"},items:[{xtype:"displayfield",name:"compound_name",fieldCls:"x-cmpTitle"},{xtype:"displayfield",value:"<br>"},{xtype:"displayfield",name:"description",fieldCls:"x-cmpDescriptions",width:680},{xtype:"displayfield"},{xtype:"displayfield",name:"biotransformation",fieldCls:"x-cmpDescriptions",width:680},{xtype:"displayfield",value:"<br>"},{xtype:"displayfield",name:"chemspider_id",cls:"x-cmpfield",labelWidth:120,labelAlign:"left",fieldLabel:"ChemSpider ID"},{xtype:"displayfield",name:"molformula",cls:"x-cmpfield",labelWidth:120,width:400,labelAlign:"left",fieldLabel:"Molecular Formula"},{xtype:"displayfield",name:"smiles",cls:"x-cmpfield",labelWidth:120,labelAlign:"left",fieldLabel:"SMILES"},{xtype:"displayfield",name:"inchi",cls:"x-cmpfield",labelWidth:120,width:650,labelAlign:"left",fieldLabel:"Standard InChl"},{xtype:"displayfield",name:"inchiKey",cls:"x-cmpfield",labelWidth:120,width:400,labelAlign:"left",fieldLabel:"Standard InChlKey"},{xtype:"displayfield",name:"affectedOrganism",cls:"x-cmpfield",labelWidth:120,width:300,labelAlign:"left",fieldLabel:"Affected Organism"},{xtype:"displayfield",name:"indication",cls:"x-cmpfield",labelWidth:120,width:650,labelAlign:"left",fieldLabel:"Indication"},{xtype:"displayfield",name:"proteinBinding",cls:"x-cmpfield",labelWidth:120,width:650,labelAlign:"left",fieldLabel:"Protein Binding"},{xtype:"displayfield",name:"toxicity",cls:"x-cmpfield",labelWidth:120,width:650,labelAlign:"left",fieldLabel:"Toxicity"},{xtype:"displayfield",name:"meltingPoint",cls:"x-cmpfield",labelWidth:120,width:650,labelAlign:"left",fieldLabel:"Melting Point"}]}]},{xtype:"panel",itemId:"bottomPanelDetails",bodyPadding:30,border:false,height:200,layout:"column",hidden:true,fieldDefaults:{labelAlign:"top",labelWidth:120,anchor:"100%"},items:[{xtype:"displayfield",name:"alogp",fieldCls:"x-cmpBottomfieldValue",baseCls:"x-cmpBottomBase",fieldLabel:"ALogP",labelAlign:"top",columnWidth:0.1},{xtype:"displayfield",name:"hha",fieldCls:"x-cmpBottomfieldValue",baseCls:"x-cmpBottomBase",fieldLabel:"# H-Bond Receptors",columnWidth:0.13,labelAlign:"top"},{xtype:"displayfield",name:"hhd",fieldCls:"x-cmpBottomfieldValue",baseCls:"x-cmpBottomBase",fieldLabel:"# H-Bond Donors",columnWidth:0.13,labelAlign:"top"},{xtype:"displayfield",name:"molweight",fieldCls:"x-cmpBottomfieldValue",baseCls:"x-cmpBottomBase",fieldLabel:"Mol Weight",columnWidth:0.1,labelAlign:"top"},{xtype:"displayfield",name:"mw_freebase",fieldCls:"x-cmpBottomfieldValue",baseCls:"x-cmpBottomBase",fieldLabel:"MW Freebase",columnWidth:0.1,labelAlign:"top"},{xtype:"displayfield",name:"num_ro5_violations",fieldCls:"x-cmpBottomfieldValue",baseCls:"x-cmpBottomBase",fieldLabel:"# Rule of 5 Violations",columnWidth:0.14,labelAlign:"top"},{xtype:"displayfield",name:"psa",fieldCls:"x-cmpBottomfieldValue",baseCls:"x-cmpBottomBase",fieldLabel:"Polar Surface Area",columnWidth:0.12,labelAlign:"top"},{xtype:"displayfield",name:"rtb",fieldCls:"x-cmpBottomfieldValue",baseCls:"x-cmpBottomBase",fieldLabel:"# Rotatable Bonds",columnWidth:0.12,labelAlign:"top"}]}]});this.callParent(arguments)},startLoading:function(){this.setLoading(true)},endLoading:function(){this.setLoading(false)},showRecord:function(a){var e=this.query("#dataPanel")[0];e.show();var d=this.query("#topPanelDetails")[0];d.show();var b=this.query("#bottomPanelDetails")[0];b.show();var c=this.query("#compound_form_imagepanel")[0];c.show();this.form.reset();this.loadRecord(a);this.doLayout()},showErrorMessage:function(){var d=this.query("#dataPanel")[0];d.hide();var c=this.query("#topPanelDetails")[0];c.hide();var a=this.query("#bottomPanelDetails")[0];a.hide();var b=this.query("#compound_form_imagepanel")[0];b.hide()},showNoDataMessage:function(){var d=this.query("#dataPanel")[0];d.hide();var c=this.query("#topPanelDetails")[0];c.hide();var a=this.query("#bottomPanelDetails")[0];a.hide();var b=this.query("#compound_form_imagepanel")[0];b.hide()}});Ext.define("LSP.model.Target",{extend:"Ext.data.Model",fields:["target_name","target_type","description","keywords","organism","synonyms","cellularLocation","molecularWeight","numberOfResidues","specificFunction","pdbIdPage","theoreticalPi"]});Ext.define("LSP.model.Compound",{extend:"Ext.data.Model",autoLoad:true,fields:["compound_name","csid_uri","molformula","molweight","inchi","inchiKey","smiles","alogp","hha","hhd","mw_freebase","num_ro5_violations","psa","rtb","meltingPoint","affectedOrganism","biotransformation","biotransformation","description","indication","proteinBinding","toxicity"]});Ext.define("LSP.store.Targets",{requires:"LSP.model.Target",extend:"Ext.data.Store",model:"LSP.model.Target",id:"Targets",proxy:{type:"ajax",actionMethods:{read:"POST"},extraParams:{protein_uri:""},url:"/core_api_calls/protein_info.json",reader:{type:"json",root:"objects",totalProperty:"totalCount"}}});Ext.define("LSP.store.Compounds",{requires:"LSP.model.Compound",extend:"Ext.data.Store",model:"LSP.model.Compound",proxy:{type:"ajax",actionMethods:{read:"POST"},extraParams:{compound_uri:""},url:"/core_api_calls/compound_info.json",reader:{type:"json",root:"objects",totalProperty:"totalCount"}}});Ext.define("LSP.view.user.Loginform",{extend:"Ext.form.Panel",alias:"widget.loginform",requires:["Ext.form.field.Hidden"],padding:"5 5 0 5",border:false,style:"background-color: #fff;",initComponent:function(){this.items=[{name:"utf8",xtype:"hidden",value:"&#x2713;"},{name:"authenticity_token",xtype:"hidden",value:$$("meta[name=csrf-token]")[0].readAttribute("content")},{xtype:"textfield",name:"user_session[login]",fieldLabel:"Name"},{xtype:"textfield",name:"user_session[password]",inputType:"password",fieldLabel:"Password"}];this.callParent(arguments)}});Ext.define("LSP.view.usergrid.UserGrid",{extend:"Ext.form.Panel",alias:"widget.usergrid",initComponent:function(){this.items=[grid=Ext.widget("dynamicgrid")];grid.buttonRender(["new","edit","filter","delete","load","exporter"]);this.callParent(arguments)}});Ext.define("LSP.store.DynamicGrid",{extend:"Ext.data.Store",model:"LSP.model.DynamicGrid",fields:[]});Ext.getHead().insertHtml("beforeEnd",'<style type="text/css">.x-selectable, .x-selectable * {    -khtml-user-select: text !important;    -moz-user-select: text !important;}</style>');Ext.require("Ext.view.Table",function(){Ext.override(Ext.view.Table,{afterRender:function(){var a=this;a.callParent();a.mon(a.el,{scroll:a.fireBodyScroll,scope:a});if(a.getFeature("selectable")===undefined){a.el.unselectable()}a.attachEventsForFeatures()}})});Ext.require("Ext.grid.feature.Feature",function(){Ext.define("LSP.view.dynamicgrid.feature.selectable",{extend:"Ext.grid.feature.Feature",alias:"feature.selectable",mutateMetaRowTpl:function(b){var a,c=b.length;for(a=0;a<c;a++){tpl=b[a];tpl=tpl.replace(/x-grid-row/,"x-grid-row x-selectable");tpl=tpl.replace(/x-grid-cell-inner x-unselectable/g,"x-grid-cell-inner");tpl=tpl.replace(/unselectable="on"/g,"");b[a]=tpl}}})});Ext.define("Ext.ux.DataView.Animated",{defaults:{duration:750,idProperty:"id"},constructor:function(a){Ext.apply(this,a||{},this.defaults)},init:function(a){this.dataview=a;var c=this.idProperty,b=a.store;a.blockRefresh=true;a.updateIndexes=Ext.Function.createSequence(a.updateIndexes,function(){this.getTargetEl().select(this.itemSelector).each(function(f,g,e){f.id=f.dom.id=Ext.util.Format.format("{0}-{1}",a.id,b.getAt(e).internalId)},this)},a);this.dataviewID=a.id;this.cachedStoreData={};this.cacheStoreData(b.data||b.snapshot);a.on("resize",function(){var e=a.store;if(e.getCount()>0){}},this);a.store.on("datachanged",d,this);function d(o){var m=a.getTargetEl(),h=o.getAt(0),q=this.getAdded(o),y=this.getRemoved(o),j=this.getRemaining(o),v=Ext.apply({},j,q);Ext.each(y,function(D){var E=this.dataviewID+"-"+D.internalId;Ext.fly(E).animate({remove:false,duration:e,opacity:0,useDisplay:true,callback:function(){Ext.fly(E).setDisplayed(false)}})},this);if(h==undefined){this.cacheStoreData(o);return}this.cacheStoreData(o);var g=Ext.get(this.dataviewID+"-"+h.internalId);if(!g){a.refresh();return true}var A=o.getCount(),l=g.getMargin("lr")+g.getWidth(),w=g.getMargin("bt")+g.getHeight(),s=m.getWidth(),f=Math.floor(s/l),r=Math.ceil(A/f),B=Math.ceil(this.getExistingCount()/f);var k={},C={},t={};Ext.iterate(j,function(F,E){var F=E.internalId,D=t[F]=Ext.get(this.dataviewID+"-"+F);k[F]={top:D.getTop()-m.getTop()-D.getMargin("t")-m.getPadding("t"),left:D.getLeft()-m.getLeft()-D.getMargin("l")-m.getPadding("l")}},this);m.applyStyles({display:"block",position:"relative"});Ext.iterate(j,function(G,F){var D=k[G],E=t[G];if(E.getStyle("position")!="absolute"){t[G].applyStyles({position:"absolute",left:D.left+"px",top:D.top+"px"})}});var p=0;Ext.iterate(o.data.items,function(F){var J=F.internalId,E=t[J];var D=p%f,I=Math.floor(p/f),H=I*w,G=D*l;C[J]={top:H,left:G};p++},this);var u=new Date(),e=this.duration,n=this.dataviewID;var z=function(){var M=new Date()-u,O=M/e,D;if(O>=1){for(D in C){Ext.fly(n+"-"+D).applyStyles({top:C[D].top+"px",left:C[D].left+"px"})}Ext.TaskManager.stop(x)}else{for(D in C){if(!j[D]){continue}var G=k[D],J=C[D],H=G.top,K=J.top,F=G.left,L=J.left,I=O*Math.abs(H-K),N=O*Math.abs(F-L),P=H>K?H-I:H+I,E=F>L?F-N:F+N;Ext.fly(n+"-"+D).applyStyles({top:P+"px",left:E+"px"}).setDisplayed(true)}}};var x={run:z,interval:20,scope:this};Ext.TaskManager.start(x);Ext.iterate(q,function(E,D){Ext.fly(this.dataviewID+"-"+D.internalId).applyStyles({top:C[D.internalId].top+"px",left:C[D.internalId].left+"px"}).setDisplayed(true);Ext.fly(this.dataviewID+"-"+D.internalId).animate({remove:false,duration:e,opacity:1})},this);this.cacheStoreData(o)}},cacheStoreData:function(a){this.cachedStoreData={};a.each(function(b){this.cachedStoreData[b.internalId]=b},this)},getExisting:function(){return this.cachedStoreData},getExistingCount:function(){var c=0,b=this.getExisting();for(var a in b){c++}return c},getAdded:function(a){var b={};a.each(function(c){if(this.cachedStoreData[c.internalId]==undefined){b[c.internalId]=c}},this);return b},getRemoved:function(a){var b=[],c;for(c in this.cachedStoreData){if(a.findBy(function(d){return d.internalId==c})==-1){b.push(this.cachedStoreData[c])}}return b},getRemaining:function(a){var b={};a.each(function(c){if(this.cachedStoreData[c.internalId]!=undefined){b[c.internalId]=c}},this);return b}});Ext.define("LSP.view.pathways.wikiPathwaysWindow",{extend:"Ext.window.Window",alias:"widget.wikiPathwaysWindow",requires:["Ext.form.Panel"],title:"Pathway from WikiPathways",layout:"fit",modal:true,autoShow:true,height:580,width:700,initComponent:function(){this.items=[{xtype:"form",padding:"0 0 0 0",border:false,style:"background-color: #fff;",items:[{xtype:"box",width:700,height:530,id:"wikipathways_win_id",name:"wikipathways_win",autoEl:{tag:"iframe",src:("http://www.wikipathways.org/wpi/PathwayWidget.php?id="+this.wpathway_id)}}]}];this.buttons=[{text:"Close",scope:this,handler:this.close}];this.callParent(arguments)}});Ext.define("Ext.ux.grid.FiltersFeature",{extend:"Ext.grid.feature.Feature",alias:"feature.filters",uses:["Ext.ux.grid.menu.ListMenu","Ext.ux.grid.menu.RangeMenu","Ext.ux.grid.filter.BooleanFilter","Ext.ux.grid.filter.DateFilter","Ext.ux.grid.filter.ListFilter","Ext.ux.grid.filter.NumericFilter","Ext.ux.grid.filter.StringFilter"],autoReload:true,filterCls:"ux-filtered-column",local:false,menuFilterText:"Filters",paramPrefix:"filter",showMenu:true,stateId:undefined,updateBuffer:500,hasFeatureEvent:false,constructor:function(a){var b=this;a=a||{};Ext.apply(b,a);b.deferredUpdate=Ext.create("Ext.util.DelayedTask",b.reload,b);b.filters=b.createFiltersCollection();b.filterConfigs=a.filters},attachEvents:function(){var c=this,a=c.view,d=a.headerCt,b=c.getGridPanel();c.bindStore(a.getStore(),true);d.on("menucreate",c.onMenuCreate,c);a.on("refresh",c.onRefresh,c);b.on({scope:c,beforestaterestore:c.applyState,beforestatesave:c.saveState,beforedestroy:c.destroy});b.filters=c;b.addEvents("filterupdate")},createFiltersCollection:function(){return Ext.create("Ext.util.MixedCollection",false,function(a){return a?a.dataIndex:null})},createFilters:function(){var h=this,g=h.filters.getCount(),a=h.getGridPanel(),d=h.createFiltersCollection(),e=a.store.model,f=e.prototype.fields,j,c,b;if(g){b={};h.saveState(null,b)}function k(m,l,n){if(m&&(n||l)){j=f.get(m);c={dataIndex:m,type:(j&&j.type&&j.type.type)||"auto"};if(Ext.isObject(l)){Ext.apply(c,l)}d.replace(c)}}Ext.Array.each(h.filterConfigs,function(l){k(l.dataIndex,l)});Ext.Array.each(a.columns,function(l){if(l.filterable===false){d.removeAtKey(l.dataIndex)}else{k(l.dataIndex,l.filter,l.filterable)}});h.removeAll();h.addFilters(d.items);if(g){h.applyState(null,b)}},onMenuCreate:function(c,b){var a=this;a.createFilters();b.on("beforeshow",a.onMenuBeforeShow,a)},onMenuBeforeShow:function(d){var c=this,b,a;if(c.showMenu){b=c.menuItem;if(!b||b.isDestroyed){c.createMenuItem(d);b=c.menuItem}a=c.getMenuFilter();if(a){b.menu=a.menu;b.setChecked(a.active);b.setDisabled(a.disabled===true)}b.setVisible(!!a);this.sep.setVisible(!!a)}},createMenuItem:function(b){var a=this;a.sep=b.add("-");a.menuItem=b.add({checked:false,itemId:"filters",text:a.menuFilterText,listeners:{scope:a,checkchange:a.onCheckChange,beforecheckchange:a.onBeforeCheck}})},getGridPanel:function(){return this.view.up("gridpanel")},applyState:function(b,d){var a,c;this.applyingState=true;this.clearFilters();if(d.filters){for(a in d.filters){c=this.filters.get(a);if(c){c.setValue(d.filters[a]);c.setActive(true)}}}this.deferredUpdate.cancel();if(this.local){this.reload()}delete this.applyingState;delete d.filters},saveState:function(a,c){var b={};this.filters.each(function(d){if(d.active){b[d.dataIndex]=d.getValue()}});return(c.filters=b)},destroy:function(){var a=this;Ext.destroyMembers(a,"menuItem","sep");a.removeAll();a.clearListeners()},removeAll:function(){if(this.filters){Ext.destroy.apply(Ext,this.filters.items);this.filters.clear()}},bindStore:function(a,b){if(!b&&this.store){if(this.local){a.un("load",this.onLoad,this)}else{a.un("beforeload",this.onBeforeLoad,this)}}if(a){if(this.local){a.on("load",this.onLoad,this)}else{a.on("beforeload",this.onBeforeLoad,this)}}this.store=a},getMenuFilter:function(){var a=this.view.headerCt.getMenu().activeHeader;return a?this.filters.get(a.dataIndex):null},onCheckChange:function(a,b){this.getMenuFilter().setActive(b)},onBeforeCheck:function(a,b){return !b||this.getMenuFilter().isActivatable()},onStateChange:function(d,b){if(d!=="serialize"){var c=this,a=c.getGridPanel();if(b==c.getMenuFilter()){c.menuItem.setChecked(b.active,false)}if((c.autoReload||c.local)&&!c.applyingState){c.deferredUpdate.delay(c.updateBuffer)}c.updateColumnHeadings();if(!c.applyingState){a.saveState()}a.fireEvent("filterupdate",c,b)}},onBeforeLoad:function(a,b){b.params=b.params||{};this.cleanParams(b.params);var c=this.buildQuery(this.getFilterData());Ext.apply(b.params,c)},onLoad:function(a,b){a.filterBy(this.getRecordFilter())},onRefresh:function(){this.updateColumnHeadings()},updateColumnHeadings:function(){var a=this,b=a.view.headerCt;if(b){b.items.each(function(d){var c=a.getFilter(d.dataIndex);d[c&&c.active?"addCls":"removeCls"](a.filterCls)})}},reload:function(){var b=this,a=b.view.getStore(),c;if(b.local){a.clearFilter(true);a.filterBy(b.getRecordFilter())}else{b.deferredUpdate.cancel();a.loadPage(1)}},getRecordFilter:function(){var c=[],a,b;this.filters.each(function(d){if(d.active){c.push(d)}});a=c.length;return function(d){for(b=0;b<a;b++){if(!c[b].validateRecord(d)){return false}}return true}},addFilter:function(a){var c=this.getFilterClass(a.type),b=a.menu?a:(new c(a));this.filters.add(b);Ext.util.Observable.capture(b,this.onStateChange,this);return b},addFilters:function(d){if(d){var b,a,c;for(b=0,a=d.length;b<a;b++){c=d[b];if(c){this.addFilter(c)}}}},getFilter:function(a){return this.filters.get(a)},clearFilters:function(){this.filters.each(function(a){a.setActive(false)})},getFilterData:function(){var c=[],b,a;this.filters.each(function(e){if(e.active){var g=[].concat(e.serialize());for(b=0,a=g.length;b<a;b++){c.push({field:e.dataIndex,data:g[b]})}}});return c},buildQuery:function(b){var a={},c,h,j,e,k,d,g=b.length;if(!this.encode){for(c=0;c<g;c++){h=b[c];j=[this.paramPrefix,"[",c,"]"].join("");a[j+"[field]"]=h.field;e=j+"[data]";for(k in h.data){a[[e,"[",k,"]"].join("")]=h.data[k]}}}else{d=[];for(c=0;c<g;c++){h=b[c];d.push(Ext.apply({},{field:h.field},h.data))}if(d.length>0){a[this.paramPrefix]=Ext.JSON.encode(d)}}return a},cleanParams:function(c){if(this.encode){delete c[this.paramPrefix]}else{var b,a;b=new RegExp("^"+this.paramPrefix+"[[0-9]+]");for(a in c){if(b.test(a)){delete c[a]}}}},getFilterClass:function(a){switch(a){case"auto":a="string";break;case"int":case"float":a="numeric";break;case"bool":a="boolean";break}return Ext.ClassManager.getByAlias("gridfilter."+a)}});Ext.define("LSP.view.dropdowns.conceptWikiProteinLookup",{extend:"Ext.form.ComboBox",alias:"widget.conceptWikiProteinLookup",store:Ext.create("Ext.data.Store",{fields:[{type:"string",name:"concept_label"},{type:"string",name:"concept_url"},{type:"string",name:"define_url"},{type:"string",name:"concept_uuid"},{type:"string",name:"concept_alt_labels"},{type:"string",name:"tag_label"},{type:"string",name:"tag_uuid"},{type:"string",name:"match"}],proxy:{type:"ajax",api:{read:"/concept_wiki_api_calls/protein_lookup.json"},reader:{type:"json"}}}),queryMode:"remote",valueField:"concept_url",displayField:"concept_label",name:"protein_uri",minChars:4,hideTrigger:true,forceSelection:true,allowBlank:false,typeAhead:true,typeAheadDelay:150,queryDelay:70,emptyText:"Start typing...",margin:"5 5 5 5",width:700,fieldLabel:"Protein name",labelWidth:120,listConfig:{loadingText:"Searching...",emptyText:"No matching proteins found.",getInnerTpl:function(){return'<p><font face="verdana" color="grey"><small>Match: {match}</small></font><br/><b>{concept_label}</b> <a href="{define_url}" target="_blank">(definition)</a></p>'}}});Ext.define("LSP.view.dropdowns.conceptWikiCompoundLookup",{extend:"Ext.form.ComboBox",alias:"widget.conceptWikiCompoundLookup",store:Ext.create("Ext.data.Store",{fields:[{type:"string",name:"concept_label"},{type:"string",name:"concept_url"},{type:"string",name:"define_url"},{type:"string",name:"concept_uuid"},{type:"string",name:"concept_alt_labels"},{type:"string",name:"tag_label"},{type:"string",name:"tag_uuid"},{type:"string",name:"match"}],proxy:{type:"ajax",api:{read:"/concept_wiki_api_calls/compound_lookup.json"},reader:{type:"json"}}}),queryMode:"remote",valueField:"concept_url",displayField:"concept_label",name:"compound_uri",minChars:4,hideTrigger:true,forceSelection:true,allowBlank:false,typeAhead:true,typeAheadDelay:150,queryDelay:70,emptyText:"Start typing...",margin:"5 5 5 5",width:700,fieldLabel:"Compound name",labelWidth:120,listConfig:{loadingText:"Searching...",emptyText:"No matching compounds found.",getInnerTpl:function(){return'<p><font face="verdana" color="grey"><small>Match: {match}</small></font><br/><b>{concept_label}</b> <a href="{define_url}" target="_blank">(definition)</a></p>'}}});Ext.define("LSP.view.Enzymetree",{extend:"Ext.tree.Panel",alias:"widget.enzymeTree",requires:["Ext.data.*","Ext.grid.*","Ext.tree.*"],singleExpand:true,multiSelect:false,rootVisible:false,useArrows:true,frame:true,height:550,autoScroll:true,columns:[{xtype:"treecolumn",text:"EC number",sortable:true,dataIndex:"ec_number",width:160},{text:"Enzyme family name",dataIndex:"name",width:290}],initComponent:function(){var a={store:{fields:[{name:"ec_number",type:"string",sortDir:"ASC"},{name:"name",type:"string"}],proxy:{type:"ajax",api:{read:"enzymes.json"},reader:{type:"json",root:"objects",totalProperty:"totalCount"}},sorters:[{property:"ec_number",direction:"ASC"}],sortOnLoad:true}};Ext.apply(this,a);Ext.apply(this.initialConfig,a);this.callParent(arguments)}});Ext.define("LSP.view.placeholder.temp",{extend:"Ext.form.Panel",alias:"widget.temp",closable:true,title:"OpenPhacts Exemplars",initComponent:function(){var a=this;Ext.applyIf(a,{xtype:"panel",bodyPadding:10,title:"OpenPhacts Exemplars",layout:"anchor",autoScroll:true,items:[{xtype:"label",text:"This page contains links to the OpenPhacts exemplars",labelWidth:600},{xtype:"displayfield",value:"<a target='_blank' href='http://ws.bioinfo.cnio.es/OpenPHACTS/'>Target Dossier</a>",labelWidth:600},{xtype:"displayfield",value:"<a target='_blank' href='http://cbn.zbh.uni-hamburg.de'>ChemBioNavigator</a> - username/password: cbn/cbn4ops",labelWidth:600},{xtype:"displayfield",value:"Polypharmacology Browser - no link yet",labelWidth:600}]});this.callParent(arguments)}});Ext.define("LSP.view.buttons.New",{extend:"Ext.Button",alias:"widget.newbutton",constructor:function(a){a=a||{};Ext.applyIf(a,{text:"New",hidden:true,scale:iconSize,iconCls:"icon-new",iconAlign:"left",listeners:{click:function(){var b=Ext.create("widget.window",{title:"Create form",frame:false,bodyBorder:true,closable:true,closeAction:"hide",animateTarget:this,width:600,height:350,layout:"fit",bodyStyle:"padding: 5px;",items:[{xtype:"form",frame:true,bodyStyle:"padding:5px 5px 0",fieldDefaults:{msgTarget:"side",labelWidth:75},defaultType:"textfield",defaults:{anchor:"100%"},items:[{fieldLabel:"Test",name:"Test"},{fieldLabel:"Test",name:"Test"},{fieldLabel:"Test",name:"Test"},{fieldLabel:"Test",name:"Test"},{xtype:"timefield",fieldLabel:"TimeTest",name:"time",minValue:"9:00am",maxValue:"6:00pm"}]}],buttons:[{text:"Create"},{text:"Cancel"}]});b.show()}}});LSP.view.buttons.New.superclass.constructor.call(this,a)}});Ext.define("LSP.view.dropdowns.pmidLookup",{extend:"Ext.form.ComboBox",alias:"widget.pmidLookup",store:Ext.create("Ext.data.Store",{fields:[{type:"string",name:"pmid"},{type:"string",name:"pmid_uri"}],proxy:{type:"ajax",api:{read:"core_api_calls/pmid_lookup.json"},reader:{type:"json"}}}),queryMode:"remote",valueField:"pmid_uri",displayField:"pmid",name:"pmid_uri",minChars:2,hideTrigger:true,forceSelection:true,typeAhead:true,emptyText:"Start typing Pubmed id...",margin:"5 5 5 5",width:600,queryDelay:700,fieldLabel:"Pubmed id",labelWidth:120,listConfig:{loadingText:"Searching...",emptyText:"No matching pubmed ids found."}});Ext.define("LSP.view.buttons.Delete",{extend:"Ext.Button",alias:"widget.deletebutton",constructor:function(a){a=a||{};Ext.applyIf(a,{text:"Delete",hidden:true,scale:iconSize,iconCls:"icon-delete",iconAlign:"left"});LSP.view.buttons.New.superclass.constructor.call(this,a)}});Ext.define("LSP.view.buttons.Edit",{extend:"Ext.Button",alias:"widget.editbutton",constructor:function(a){a=a||{};Ext.applyIf(a,{text:"Edit",hidden:true,scale:iconSize,iconCls:"icon-edit",iconAlign:"left",listeners:{click:function(){var b=Ext.create("widget.window",{title:"Edit form",frame:false,closable:true,closeAction:"hide",animateTarget:this,width:600,height:350,layout:"fit",bodyStyle:"padding: 5px;",items:[{xtype:"form",frame:true,bodyStyle:"padding:5px 5px 0",fieldDefaults:{msgTarget:"side",labelWidth:75},defaultType:"textfield",defaults:{anchor:"100%"},items:[{fieldLabel:"Test",name:"Test"},{fieldLabel:"Test",name:"Test"},{fieldLabel:"Test",name:"Test"},{fieldLabel:"Test",name:"Test"},{xtype:"timefield",fieldLabel:"TimeTest",name:"time",minValue:"9:00am",maxValue:"6:00pm"}]}],buttons:[{text:"Save"},{text:"Cancel"}]});b.show()}}});LSP.view.buttons.New.superclass.constructor.call(this,a)}});Ext.define("LSP.view.dropdowns.conceptWikiLookup",{extend:"Ext.form.ComboBox",alias:"widget.conceptWikiLookup",store:Ext.create("Ext.data.Store",{fields:[{type:"string",name:"concept_label"},{type:"string",name:"concept_url"},{type:"string",name:"concept_uuid"},{type:"string",name:"concept_alt_labels"},{type:"string",name:"tag_label"},{type:"string",name:"tag_uuid"}],proxy:{type:"ajax",api:{read:"/concept_wiki_api_calls/concept_lookup.json"},reader:{type:"json"}}}),queryMode:"remote",valueField:"concept_url",displayField:"concept_label",name:"concept_uri",minChars:4,hideTrigger:true,forceSelection:true,typeAhead:true,emptyText:"Start typing...",margin:"5 5 5 5",width:70,typeAheadDelay:150,queryDelay:700,fieldLabel:"Concept name",labelWidth:120,listConfig:{loadingText:"Searching...",emptyText:"No matching concepts found.",getInnerTpl:function(){return'<p><b>{concept_label}</b> <a href="{concept_url}" target="_blank">(definition)</a> <i>({tag_label})</i><br/ ><small><i>{concept_alt_labels}</i></small></p>'}}});Ext.define("LSP.view.buttons.Filter",{extend:"Ext.Button",alias:"widget.filterbutton",constructor:function(a){a=a||{};Ext.applyIf(a,{text:"Filter",name:"filter-button",hidden:true,scale:iconSize,iconCls:"icon-filter",iconAlign:"left",listeners:{click:function(){var b=Ext.create("widget.window",{title:"Filter form",frame:false,closable:true,closeAction:"hide",animateTarget:this,width:600,height:350,layout:"fit",bodyStyle:"padding: 5px;",items:[{xtype:"form",frame:true,bodyStyle:"padding:5px 5px 0",fieldDefaults:{msgTarget:"side",labelWidth:75},defaultType:"textfield",defaults:{anchor:"100%"},items:[{fieldLabel:"Test",name:"Test"},{fieldLabel:"Test",name:"Test"},{fieldLabel:"Test",name:"Test"},{fieldLabel:"Test",name:"Test"},{xtype:"timefield",fieldLabel:"TimeTest",name:"time",minValue:"9:00am",maxValue:"6:00pm"}]}],buttons:[{text:"Filter"},{text:"Cancel"}]});b.show()}}});LSP.view.buttons.New.superclass.constructor.call(this,a)}});Ext.define("LSP.view.dropdowns.wikiPathwaysCompoundLookup",{extend:"Ext.form.ComboBox",alias:"widget.wikiPathwaysCompoundLookup",store:Ext.create("Ext.data.Store",{fields:[{type:"string",name:"compound_name"},{type:"string",name:"compound_uri"}],proxy:{type:"ajax",api:{read:"/core_api_calls/wiki_pathway_compound_lookup.json"},reader:{type:"json"}}}),queryMode:"remote",valueField:"compound_uri",displayField:"compound_name",name:"compound_uri",minChars:4,hideTrigger:true,forceSelection:true,typeAhead:true,emptyText:"Start typing...",margin:"5 5 5 5",width:700,queryDelay:700,fieldLabel:"Compound name",labelWidth:120,listConfig:{loadingText:"Searching..."}});Ext.define("LSP.view.dropdowns.wikiPathwaysProteinLookup",{extend:"Ext.form.ComboBox",alias:"widget.wikiPathwaysProteinLookup",store:Ext.create("Ext.data.Store",{fields:[{type:"string",name:"wp_protein_name"},{type:"string",name:"wp_protein_uri"}],proxy:{type:"ajax",api:{read:"/core_api_calls/wiki_pathway_protein_lookup.json"},reader:{type:"json"}}}),queryMode:"remote",valueField:"wp_protein_uri",displayField:"wp_protein_name",name:"wp_protein_uri",minChars:4,hideTrigger:true,forceSelection:true,typeAhead:true,emptyText:"Start typing...",margin:"5 5 5 5",width:700,queryDelay:700,fieldLabel:"Protein name",labelWidth:120,listConfig:{loadingText:"Searching..."}});Ext.define("LSP.controller.NavigationTree",{extend:"Ext.app.Controller",stores:["NavigationTree"],views:["Appmoduletree"],init:function(){}});Ext.define("LSP.controller.Queryform",{extend:"Ext.app.Controller",views:["sparqlform.Queryform"],init:function(){this.control({"queryform button[action=query]":{click:this.submitQuery}})},submitQuery:function(c){var d=c.up("form");c.disable();values=d.getValues();var a=d.up("queryform");var b=a.query("dynamicgrid3")[0];b.store.proxy.actionMethods={read:"POST"};b.store.proxy.extraParams=values;b.store.proxy.api.read="/core_api_calls/sparql.json";b.store.load();b.store.on("load",function(f,e,g){grid_controller.storeLoad(b,g);d.doLayout();c.enable()})}});Ext.define("LSP.controller.CmpdByNameForm",{extend:"Ext.app.Controller",models:["Compound"],stores:["Compounds"],views:["cmpd_by_name.CmpdByNameSingleDisplayForm"],refs:[{ref:"cmpdByNameSingleDisplayForm",selector:"CmpdByNameSingleDisplayForm"},{ref:"compoundImagePanel",selector:"CmpdByNameSingleDisplayForm #compound_form_imagepanel"},{ref:"formView",selector:"CmpdByNameForm"},{ref:"submitButton",selector:"#CmpdByNameSubmit_id"}],init:function(){this.control({"CmpdByNameForm button[action=query_cmpd_by_name]":{click:this.submitQuery},"CmpdByNameForm conceptWikiCompoundLookup":{select:this.enableSubmit}})},enableSubmit:function(c){var b=this.getFormView();var a=this.getSubmitButton();a.enable()},submitQuery:function(c){var e=this;var d=c.up("form");c.disable();var f=this.getCmpdByNameSingleDisplayForm();f.startLoading();var b=d.getValues();var a=this.getCompoundsStore();a.proxy.extraParams.compound_uri=b;a.load({scope:this,callback:function(j,h,k){if(k){if(j.length>0){var g=j[0].data.csid_uri.match(/http:\/\/rdf.chemspider.com\/(\d+)/)[1];e.getCompoundImagePanel().setSrc("http://www.chemspider.com/ImagesHandler.ashx?id="+g);f.showRecord(j[0])}else{f.showNoDataMessage()}}else{f.showErrorMessage()}}});f.endLoading();c.enable()}});Ext.define("LSP.controller.Settings",{extend:"Ext.app.Controller",views:["Settings"],init:function(){this.control({"settingsform button[action=save_endpoint]":{click:this.saveEndpoint}})},saveEndpoint:function(b){var c=b.up("form");var a=c.getValues();c.submit({url:"/sparql_endpoint/settings.json",waitMsg:"Saving end point...",success:function(d,e){Ext.Msg.alert("Success","Endpoint stored")}})}});Ext.define("LSP.view.user.Login",{extend:"Ext.window.Window",alias:"widget.userlogin",requires:["LSP.view.user.Loginform"],title:"Log in",layout:"fit",modal:true,autoShow:true,height:120,width:280,initComponent:function(){this.items=[{xtype:"loginform"}];this.buttons=[{text:"Login",action:"login"},{text:"Cancel",scope:this,handler:this.close}];this.callParent(arguments)}});Ext.define("LSP.controller.Users",{extend:"Ext.app.Controller",views:["user.Login","user.New"],init:function(){this.control({loginbutton:{click:this.userLoginWindow},logoutbutton:{click:this.logoutUser},usernewbutton:{click:this.newUserWindow},loginform:{render:function(a){a.getForm().findField("user_session[login]").focus(false,10)}},"userlogin button[action=login]":{click:this.loginUser},"usernew button[action=commit]":{click:this.newUser}})},onLaunch:function(){this.checkCoreAPI()},checkCoreAPI:function(){Ext.Ajax.request({url:"/core_api_calls/check.json",success:function(b){var a=Ext.ComponentQuery.query('displayfield[id="ops_api_staus_id"]')[0];a.setValue("")},failure:function(b){var a=Ext.ComponentQuery.query('displayfield[id="ops_api_staus_id"]')[0];a.setValue("<b>Sorry, Open PHACTS core API is currently off-line<br/>Please try again later by refreshing your browser</b>")}})},userLoginWindow:function(c,d,b){var a=Ext.widget("userlogin")},newUserWindow:function(c,d,b){var a=Ext.widget("usernew")},loginUser:function(d,f,c){var g=d.up("window"),e=g.down("form"),a=e.getRecord(),b=e.getValues();Ext.Ajax.request({url:"/login",params:b,success:function(h){Ext.getCmp("logoutButton").setText("Log out");Ext.getCmp("loginButton").setVisible(false);Ext.getCmp("userNewButton").setVisible(false);Ext.getCmp("logoutButton").setVisible(true);Ext.getCmp("centerView").items.each(function(j){j.destroy()});Ext.getCmp("appModuleTree").getStore().load()}});g.close()},logoutUser:function(b,c,a){Ext.Ajax.request({url:"/logout",method:"DELETE",success:function(d){Ext.getCmp("loginButton").setVisible(true);Ext.getCmp("userNewButton").setVisible(true);Ext.getCmp("logoutButton").setVisible(false);Ext.getCmp("centerView").items.each(function(e){e.destroy()});Ext.getCmp("appModuleTree").getStore().load()},failure:function(d){Ext.Msg.alert(d.statusText,d.responseText)}})},newUser:function(d,f,c){var g=d.up("window"),e=g.down("form"),a=e.getRecord(),b=e.getValues();Ext.Ajax.request({url:"/users",method:"POST",params:b,success:function(h){Ext.getCmp("logoutButton").setText("Log out");Ext.getCmp("loginButton").setVisible(false);Ext.getCmp("userNewButton").setVisible(false);Ext.getCmp("logoutButton").setVisible(true)},failure:function(h){Ext.Msg.alert(h.statusText,h.responseText)}});g.close()}});Ext.define("LSP.view.Navigator",{extend:"Ext.Panel",alias:"widget.navigator",requires:["LSP.view.Appmoduletree","Ext.layout.container.Accordion"],collapsible:true,margins:"0 0 4 4",layout:"accordion",layoutConfig:{animate:true},initComponent:function(){this.items=[{title:"Navigation",autoScroll:true,border:false,iconCls:"nav",items:[{xtype:"appmoduletree",id:"appModuleTree"}]},{title:"Settings",border:false,autoScroll:true,iconCls:"settings",items:[{xtype:"settingsform",id:"appSettings"}]}];this.callParent(arguments)}});Ext.Loader.setConfig({enabled:true});Ext.Loader.setPath("Ext.ux.grid","ext/examples/ux/grid");Ext.define("LSP.view.dynamicgrid.DynamicGrid3",{extend:"Ext.grid.Panel",alias:"widget.dynamicgrid3",requires:["Ext.grid.RowNumberer","Ext.form.*","Ext.ux.grid.FiltersFeature","LSP.view.dynamicgrid.feature.selectable"],autoScroll:true,layout:"fit",gridBaseTitle:"",readUrl:"",limit:100,recordsLoaded:0,csid_column:false,initComponent:function(){var d=Ext.create("Ext.grid.feature.Grouping",{groupHeaderTpl:'Group: {name} ({rows.length} Item{[values.rows.length > 1 ? "s" : ""]})'});var c={ftype:"filters",encode:true,local:true};var e={ftype:"selectable",id:"selectable"};var b=Ext.create("LSP.store.DynamicGrid");var a={store:b,tbar:[{xtype:"button",text:"Retrieve next 100 records",tooltip:"On each click 100 additional records\nare added to the resultset",itemId:"nextRecords",iconCls:"icon-new",disabled:true},{xtype:"tbseparator"},{xtype:"exporterbutton",store:b,formatter:"csv",swfPath:"app/view/ux/exporter/downloadify.swf",downloadImage:"app/view/ux/exporter/csv_button.png",itemId:"csvDownload_id",width:117,height:22,hidden:false},{xtype:"tbseparator"},{xtype:"button",text:"Prepare SD-file download",tooltip:"Starts a two steep process to download the SD-file. This may take a while...",itemId:"sdfDownloadProxy_id",iconCls:"icon-sdf",hidden:false,disabled:true},{xtype:"exporterbutton",store:b,formatter:"sdf",swfPath:"app/view/ux/exporter/downloadify.swf",downloadImage:"app/view/ux/exporter/sdf_button.png",itemId:"sdfDownload_id",width:111,height:22,hidden:false,disabled:true}],columns:[{name:"temp",hidden:true}],rowNumberer:true,defaultWidth:200,features:[d,c,e]};Ext.apply(this,a);Ext.apply(this.initialConfig,a);this.callParent(arguments)}});Ext.define("LSP.controller.grids.DynamicGrid",{extend:"Ext.app.Controller",views:["dynamicgrid.DynamicGrid3"],models:["DynamicGrid"],init:function(){this.control({dynamicgrid3:{itemdblclick:function(c,b,g,d,h,f){if(b.data.csid_uri!==undefined){var a=b.data.csid_uri.match(/http:\/\/rdf.chemspider.com\/(\d+)/)[1];if(parseInt(a)>=1){Ext.create("CS.view.CompoundWindow").showCompound(a)}}}},"dynamicgrid3 toolbar #sdfDownloadProxy_id":{click:this.prepSDFile}})},onLaunch:function(){},testThis:function(a){},addNextRecords:function(b,f){b.down("#sdfDownloadProxy_id").setText("Prepare SD-file download");b.down("#sdfDownload_id").disable();var d=b.store;var c=this;var a=Ext.create("LSP.store.DynamicGrid");a.proxy.extraParams=f;a.proxy.api.read=b.readUrl;a.proxy.actionMethods=d.proxy.actionMethods;var e=d.data.length+1;b.setLoading(true);a.load({params:{offset:e,limit:100}});a.on("load",function(g,j,l){if(l===false){Ext.MessageBox.show({title:"Error",msg:"Call to OpenPhacts API timed out.<br/>We are sorry, please try again later.",buttons:Ext.MessageBox.OK,icon:Ext.MessageBox.ERROR});b.setTitle(b.gridBaseTitle+" - Error on search!");b.setLoading(false);return false}var h=e-1;var k=0;Ext.each(j,function(m){m.index=h+k;k++});d.loadRecords(j,{addRecords:true});b.setLoading(false);b.recordsLoaded=d.data.length;if(g.data.length<100){b.setTitle(b.gridBaseTitle+" - All "+b.recordsLoaded+" records loaded");b.down("#nextRecords").disable()}else{b.setTitle(b.gridBaseTitle+" - Records loaded: "+d.data.length)}})},storeLoad:function(c,e){if(e===false){Ext.MessageBox.show({title:"Error",msg:"Call to OpenPhacts API timed out.<br/>We are sorry, please try again later.",buttons:Ext.MessageBox.OK,icon:Ext.MessageBox.ERROR});c.setTitle(c.gridBaseTitle+" - Error on search!");return false}c.down("#sdfDownloadProxy_id").setText("Prepare SD-file download");var d=this;var a=c.store;if(typeof(a.proxy.reader.jsonData.columns)==="object"){var b=[];if(c.rowNumberer){b.push(Ext.create("Ext.grid.RowNumberer",{width:40}))}Ext.each(a.proxy.reader.jsonData.columns,function(f){b.push(f);if(f.text=="csid_uri"){c.csid_column=true;c.down("#sdfDownloadProxy_id").enable()}});c.reconfigure(a,b);c.recordsLoaded=a.data.length;if(c.recordsLoaded==0){c.setTitle(c.gridBaseTitle+" - No records found within OPS for this search!");Ext.MessageBox.show({title:"Info",msg:"The OPS system does not contain any data that match this search.",buttons:Ext.MessageBox.OK,icon:Ext.MessageBox.INFO})}else{c.setTitle(c.gridBaseTitle+" - Records loaded: "+c.recordsLoaded);if(c.recordsLoaded==c.limit){c.down("#nextRecords").enable()}else{c.setTitle(c.gridBaseTitle+" - All "+c.recordsLoaded+" records loaded")}}}},prepSDFile2:function(b){var a=b.up("dynamicgrid3");var e=a.store;var c=e.data.items;var f=Ext.create("CS.store.Compound");var d=c.length;var h=0;var g=0;b.setText("SD-file preparing...");Ext.each(c,function(k){var j=k.raw.csid_uri.match(/http:\/\/rdf.chemspider.com\/(\d+)/)[1];if(!isNaN(parseInt(j))){if(k.molfile===undefined||k.molfile.length<30){f.load({params:{"csids[0]":j},callback:function(m,l,n){if(n){h++;compound=f.first().raw.Mol;k.molfile=compound;b.setText("SD-File "+(100*h/d).toFixed(0)+"% ready");if(h===d){b.setText("SD-File ready! Click ->");a.down("#sdfDownload_id").enable()}}else{g++}}},this)}else{h++;b.setText("SD-File "+(100*h/d).toFixed(0)+"% ready")}}else{g++}})},prepSDFile:function(g){var j=g.up("dynamicgrid3");var m=j.store;var h=m.data.items;var b=h.length;var e=0;var f=0;g.setText("SD-file preparing...");csid_hash={};csid_molfile_hash={};Ext.each(h,function(o){var n=o.raw.csid_uri.match(/http:\/\/rdf.chemspider.com\/(\d+)/)[1];if(!isNaN(parseInt(n))){if(o.molfile!==undefined&&o.molfile.length>30){csid_molfile_hash[n]=o.molfile}if(csid_hash[n]===undefined){csid_hash[n]=[o.index]}else{csid_hash[n].push(o.index)}}});for(var d in csid_hash){var a=csid_hash[d];var c=(csid_molfile_hash[d]!==undefined);if(c){var k=a.length;for(i=0;i<k;i++){var l=m.getAt(a[i]);if(l.molfile==undefined){l.molfile=csid_molfile_hash[d]}}this.updateSDFStatus(g,m)}else{this.getMolfile(d,a,m,g)}}},updateSDFStatus:function(d,b){var a=b.data.items;var c=a.length;var e=0;var f=0;Ext.each(a,function(g){if(g.molfile===undefined){e++}});f=c-e;d.setText("SD-File "+(100*f/c).toFixed(0)+"% ready");if(f===c){d.setText("SD-File ready! Click ->");d.up("grid").down("#sdfDownload_id").enable()}},getMolfile:function(b,c,d,a){var f=this;var g=Ext.create("CS.store.Compound");var e=c.length;g.load({params:{"csids[0]":b},callback:function(k,h,m){if(m){var j=g.first().raw.Mol;for(i=0;i<e;i++){var l=d.getAt(c[i]);l.molfile=j}f.updateSDFStatus(a,d)}else{}}},this)}});Ext.Loader.setConfig({enabled:true});Ext.Loader.setPath("Ext.ux.DataView","/ext/examples/ux/DataView/");Ext.define("LSP.view.dataview.StructureViewer",{extend:"Ext.window.Window",alias:"widget.StructureViewer",requires:["Ext.form.Panel","Ext.util.*","Ext.ux.DataView.Animated"],title:"Structures",layout:"fit",modal:true,autoShow:true,height:570,width:810,initComponent:function(){var b=structureViewStore;var a=Ext.create("Ext.view.View",{deferInitialRefresh:false,store:b,tpl:Ext.create("Ext.XTemplate",'<tpl for=".">','<div class="structure_data_view-wrap">','<p height="180">','<img width="128" height="128" src="http://www.chemspider.com/ImagesHandler.ashx?id={csid}&w=128&h=128" alt="CSID:{csid}"/>','<br /><strong>Chemspider id : <a href ="http://inchi.chemspider.com/Chemical-Structure.{csid}.html" target="_blank">{csid}</a></strong>',"</p>","</div>","</tpl>"),plugins:[Ext.create("Ext.ux.DataView.Animated",{duration:550,idProperty:"csid"})],itemSelector:"div.structure_data_view-wrap",overItemCls:"x-view-over_structure_dv",singleSelect:true,autoScroll:true});this.items=[{xtype:"form",padding:"0 0 0 0",border:false,autoScroll:true,style:"background-color: #fff;",items:a}];this.buttons=[{text:"Use structure",action:"commit_structure"},{text:"Cancel",scope:this,handler:this.close}];this.callParent(arguments)}});Ext.define("LSP.controller.SimSearchForm",{extend:"Ext.app.Controller",views:["larkc_sim_search.SimSearchForm","mol_editor_forms.KetcherForm","dataview.StructureViewer"],refs:[{ref:"ssform",selector:"SimSearchForm"},{ref:"strucGrid",selector:"SimSearchForm dynamicgrid3"},{ref:"submitButton",selector:"SimSearchForm #sim_sss_start_search_button_id"}],init:function(){this.control({"SimSearchForm button[action=ketcher_editor]":{click:this.launchKetcher},"KetcherForm button[action=commit_structure]":{click:this.getSmiles},"SimSearchForm button[action=query]":{click:this.submitQuery},"SimSearchForm button[action=data_view]":{click:this.launchDataView}})},launchKetcher:function(c){var a=Ext.widget("KetcherForm");fields=this.getSsform().form.getFields().items;var b="";fields.forEach(function(e){if(e.name=="molfile"){b=e.getValue();var d=12}});if(b!=""){document.getElementById("ketcher_box_id").contentWindow.ketcher.setMolecule(b)}},getSmiles:function(b){var a=document.getElementById("ketcher_box_id");smiles=a.contentWindow.ketcher.getSmiles();molfile=a.contentWindow.ketcher.getMolfile();fields=this.getSsform().form.getFields().items;fields.forEach(function(c){if(c.name=="smiles"){c.setValue(smiles)}else{if(c.name=="molfile"){c.setValue(molfile)}}});b.up("KetcherForm").close()},submitQuery:function(e){e.disable();var a=e.up("form");var c=this;var g=this.getStrucGrid();var b=g.store.getRange();g.store.remove(b);this.getStrucGrid().recordsLoaded=0;values=a.getValues();if(values.smiles.length<4){e.enable();return}csid_string="";var h=Ext.create("CS.engine.search.Structure",{listeners:{finished:function(k,l){h.loadCSIDs(function(m){c.hitCoreAPI(m)})}}});var j="";var f="";var d={};d["searchOptions.Molecule"]=values.smiles;if(values.search_type=="1"){j="Exact structure match";f="exact"}else{if(values.search_type=="2"){j="Substructure structure";f="substructure"}else{if(values.search_type=="3"){j="Similarity search";f="similarity";d["searchOptions.Threshold"]=0.99;d["searchOptions.SimilarityType"]="Tanimoto"}else{}}}this.getStrucGrid().setTitle(j);h.doSearch(f,d)},hitCoreAPI:function(b){var a=this.getStrucGrid();grid_controller=this.getController("LSP.controller.grids.DynamicGrid");a.store.proxy.actionMethods={read:"POST"};a.store.proxy.extraParams={csids:b.join(",")};a.store.proxy.api.read=a.readUrl;a.store.load({params:{offset:0,limit:100}});a.store.on("load",function(d,c,e){this.getSubmitButton().enable();grid_controller.storeLoad(a,e);this.getSsform().doLayout()},this)}});Ext.define("LSP.view.target_by_name.TargetByNameForm",{extend:"Ext.form.Panel",alias:"widget.TargetByNameForm",closable:true,requires:["LSP.view.dropdowns.conceptWikiProteinLookup","LSP.view.dynamicgrid.DynamicGrid3","LSP.view.target_by_name.TargetPanel"],layout:{type:"vbox",align:"stretch"},initComponent:function(){this.items=[{xtype:"label",html:'<font face="verdana" color="grey">Hint: Start typing in protein name and species. E.g. "Adenosine receptor A2a (Homo sapiens)"</font>',labelWidth:400,padding:"5 0 0 140"},{xtype:"container",margin:"0 5 5 5",name:"form_fields",layout:{type:"column"},style:"background-color: #fff;",items:[{xtype:"conceptWikiProteinLookup"},{xtype:"button",padding:"5 5 5 5",text:"Search",itemId:"TargetByNameSubmit_id",disabled:true,action:"query_target_by_name"}]},{xtype:"TargetPanel",flex:1}];this.callParent(arguments)}});Ext.define("LSP.controller.TargetByNameForm",{extend:"Ext.app.Controller",models:["Target"],stores:["Targets"],views:["target_by_name.TargetByNameForm","target_by_name.TargetPanel"],refs:[{ref:"targetPanel",selector:"TargetPanel"},{ref:"formView",selector:"TargetByNameForm"},{ref:"submitButton",selector:"#TargetByNameSubmit_id"}],init:function(){this.control({"TargetByNameForm button[action=query_target_by_name]":{click:this.submitQuery},"TargetByNameForm conceptWikiProteinLookup":{select:this.enableSubmit}})},enableSubmit:function(){var b=this.getFormView();var a=this.getSubmitButton();a.enable()},submitQuery:function(c){c.disable();var e=this.getTargetPanel();e.startLoading();var d=this.getFormView();var a=d.getValues().protein_uri;var b=this.getTargetsStore();b.proxy.extraParams.protein_uri=a;b.load();e.endLoading();c.enable()}});Ext.define("LSP.view.tree_selector_forms.EnzymeTreeForm",{extend:"Ext.window.Window",alias:"widget.EnzymeTreeForm",requires:["Ext.form.Panel","LSP.view.Enzymetree"],title:"Select an enzyme family",layout:"fit",modal:true,autoShow:true,height:600,width:500,initComponent:function(){this.items=[{xtype:"form",padding:"0 0 0 0",border:false,style:"background-color: #fff;",items:[enztree=Ext.widget("enzymeTree")]}];this.buttons=[{text:"Use selection",action:"get_enzyme"},{text:"Cancel",scope:this,handler:this.close}];this.callParent(arguments)}});Ext.define("LSP.view.larkc_pharm_by_target.PharmEnzymeForm",{extend:"Ext.form.Panel",alias:"widget.PharmEnzymeForm",requires:["LSP.view.tree_selector_forms.EnzymeTreeForm"],closable:true,layout:{type:"vbox",align:"stretch"},initComponent:function(){var a=this;a.items=[{xtype:"container",height:34,name:"form_fields",layout:{type:"column"},items:[{xtype:"displayfield",name:"enzyme_family",margin:"5 5 5 5",width:688,value:"No enzyme class selected - press button ->",fieldLabel:"Enzyme family class",labelWidth:130},{xtype:"button",padding:"5 5 5 5",text:"Browse EC codes",action:"enz_tree"},{name:"enz_name",xtype:"hidden",value:""},{name:"ec_number",xtype:"hidden",value:""}]},{xtype:"button",action:"query",itemId:"submitEnzymePharm_id",text:"Start search..."},{xtype:"dynamicgrid3",title:"Inhibitors for enzyme class: no selection yet",gridBaseTitle:"Inhibitors for enzymes in class: ",readUrl:"/core_api_calls/pharm_enzyme_fam.json",flex:1}];a.callParent(arguments)}});Ext.define("LSP.controller.PharmEnzymeForm",{extend:"Ext.app.Controller",views:["larkc_pharm_by_target.PharmEnzymeForm","tree_selector_forms.EnzymeTreeForm"],refs:[{ref:"PEform",selector:"PharmEnzymeForm"},{ref:"gridView",selector:"PharmEnzymeForm dynamicgrid3"}],init:function(){this.control({"PharmEnzymeForm button[action=enz_tree]":{click:this.launchEnzyme},"EnzymeTreeForm button[action=get_enzyme]":{click:this.getEnzyme},"PharmEnzymeForm #submitEnzymePharm_id":{click:this.submitQuery}})},onLaunch:function(){this.control({PharmEnzymeForm:{afterrender:this.prepGrid}})},prepGrid:function(){var b=this.getController("LSP.controller.grids.DynamicGrid");var a=this.getGridView();var c=Ext.ComponentQuery.query("PharmEnzymeForm dynamicgrid3 #nextRecords")[0];c.on("click",function(){var d=c.up("form").getValues();b.addNextRecords(a,d)})},launchEnzyme:function(b){var a=Ext.widget("EnzymeTreeForm")},getEnzyme:function(d){var b=d.up().up().down("enzymeTree");var e=b.getView().getSelectionModel().getSelection();var f=e[0].data;var a=this.getPEform().getForm().findField("enzyme_family");a.setValue("<b>"+f.ec_number+" : "+f.name+"</b>");var c=this.getPEform().getForm().findField("ec_number");c.setValue(f.ec_number);var g=this.getPEform().getForm().findField("enz_name");g.setValue(f.name);d.up("EnzymeTreeForm").close()},submitQuery:function(c){var d=c.up("form");c.disable();var a=d.getValues();var b=this.getGridView();grid_controller=this.getController("LSP.controller.grids.DynamicGrid");b.store.proxy.actionMethods={read:"POST"};b.store.proxy.extraParams=a;b.store.proxy.api.read=b.readUrl;b.store.load({params:{offset:0,limit:100}});b.store.on("load",function(f,e,g){grid_controller.storeLoad(b,g);d.doLayout();c.enable()})}});Ext.define("LSP.view.pharm_by_target_name2.PharmByTargetNameForm",{extend:"Ext.form.Panel",alias:"widget.PharmByTargetNameForm",closable:true,requires:["LSP.view.dropdowns.conceptWikiProteinLookup","LSP.view.dynamicgrid.DynamicGrid3"],layout:{type:"vbox",align:"stretch"},initComponent:function(){this.items=[{xtype:"label",html:'<font face="verdana" color="grey">Hint: Type in protein name and species. E.g. "ADA protein human"</font>',labelWidth:400,padding:"5 0 0 140"},{xtype:"container",margin:"0 5 5 5",name:"form_fields",layout:{type:"column"},style:"background-color: #fff;",items:[{xtype:"conceptWikiProteinLookup",fieldLabel:"Protein name",forceSelection:true,allowBlank:false,typeAhead:true,typeAheadDelay:250,queryDelay:70},{xtype:"button",itemId:"pharmByTargetSubmit_id",padding:"5 5 5 5",text:"Search...",disabled:true,name:"query_summit_button",action:"query_pharm_by_target_name"}]},{xtype:"dynamicgrid3",itemId:"pharmByTargetGrid_id",title:"Pharmacology by Target name search results",gridBaseTitle:"Pharmacology by Target name search results",flex:1,readUrl:"/core_api_calls/pharm_by_protein_name.json"}];this.callParent(arguments)}});Ext.define("LSP.controller.PharmByTargetNameForm",{extend:"Ext.app.Controller",views:["pharm_by_target_name2.PharmByTargetNameForm"],refs:[{ref:"gridView",selector:"#pharmByTargetGrid_id"},{ref:"formView",selector:"PharmByTargetNameForm"},{ref:"submitButton",selector:"#pharmByTargetSubmit_id"}],init:function(){this.control({"PharmByTargetNameForm button[action=query_pharm_by_target_name]":{click:this.submitQuery},"PharmByTargetNameForm conceptWikiProteinLookup":{select:this.enableSubmit}})},onLaunch:function(){this.control({PharmByTargetNameForm:{afterrender:this.prepGrid}})},prepGrid:function(){var b=this.getController("LSP.controller.grids.DynamicGrid");var a=this.getGridView();var c=Ext.ComponentQuery.query("PharmByTargetNameForm dynamicgrid3 #nextRecords")[0];c.on("click",function(){var d=c.up("form").getValues();b.addNextRecords(a,d)})},createGridColumns:function(){var b=this.getController("LSP.controller.grids.DynamicGrid");var a=this.getGridView();b.storeLoad(a)},enableSubmit:function(a){var c=this.getFormView();var b=this.getSubmitButton();b.enable()},submitQuery:function(c){var d=c.up("form");c.disable();var a=d.getValues();var b=this.getGridView();var e=this.getController("LSP.controller.grids.DynamicGrid");b.store.proxy.actionMethods={read:"POST"};b.store.proxy.extraParams=a;b.store.proxy.api.read=b.readUrl;b.store.load({params:{offset:0,limit:100}});b.store.on("load",function(g,f,h){e.storeLoad(b,h);d.doLayout();c.enable()})}});Ext.define("LSP.view.pharm_by_cmpd_name2.PharmByCmpdNameForm",{extend:"Ext.form.Panel",alias:"widget.PharmByCmpdNameForm",closable:true,requires:["LSP.view.dropdowns.conceptWikiCompoundLookup","LSP.view.dynamicgrid.DynamicGrid3"],layout:{type:"vbox",align:"stretch"},initComponent:function(){this.items=[{xtype:"label",html:'<font face="verdana" color="grey">Hint: Type in compound name. E.g. "Aspirin"</font>',labelWidth:400,padding:"5 0 0 140"},{xtype:"container",margin:"0 5 5 5",name:"form_fields",layout:{type:"column"},style:"background-color: #fff;",items:[{name:"cmpd_uuid",xtype:"hidden",value:""},{xtype:"conceptWikiCompoundLookup",fieldLabel:"Compound name",forceSelection:true,allowBlank:false,typeAhead:true,typeAheadDelay:250,queryDelay:200},{xtype:"button",itemId:"pharmByCmpdSubmit_id",padding:"5 5 5 5",text:"Search...",disabled:true,action:"query_pharm_by_cmpd_name"}]},{xtype:"dynamicgrid3",itemId:"pharmByCmpdGrid_id",readUrl:"/core_api_calls/pharm_by_compound_name.json",title:"Pharmacology by Compound name search results",gridBaseTitle:"Pharmacology by Compound name search results",flex:1}];this.callParent(arguments)}});Ext.define("LSP.controller.PharmByCmpdNameForm",{extend:"Ext.app.Controller",views:["pharm_by_cmpd_name2.PharmByCmpdNameForm"],refs:[{ref:"gridView",selector:"#pharmByCmpdGrid_id"},{ref:"formView",selector:"PharmByCmpdNameForm"},{ref:"submitButton",selector:"#pharmByCmpdSubmit_id"}],init:function(){this.control({"PharmByCmpdNameForm button[action=query_pharm_by_cmpd_name]":{click:this.submitQuery},"PharmByCmpdNameForm conceptWikiCompoundLookup":{select:this.enableSubmit}})},onLaunch:function(){this.control({PharmByCmpdNameForm:{afterrender:this.prepGrid}})},prepGrid:function(){var b=this.getController("LSP.controller.grids.DynamicGrid");var a=this.getGridView();var c=Ext.ComponentQuery.query("PharmByCmpdNameForm dynamicgrid3 #nextRecords")[0];c.on("click",function(){var d=c.up("form").getValues();b.addNextRecords(a,d)})},createGridColumns:function(){var b=this.getController("LSP.controller.grids.DynamicGrid");var a=this.getGridView();b.storeLoad(a)},enableSubmit:function(c){var b=this.getFormView();var a=b.query("button[action=query_pharm_by_cmpd_name]")[0];a.enable()},submitQuery:function(c){var d=c.up("form");c.disable();var a=d.getValues();var b=this.getGridView();grid_controller=this.getController("LSP.controller.grids.DynamicGrid");b.store.proxy.actionMethods={read:"POST"};b.store.proxy.extraParams=a;b.store.proxy.api.read=b.readUrl;b.store.load({params:{offset:0,limit:100}});b.store.on("load",function(f,e,g){grid_controller.storeLoad(b,g);d.doLayout();c.enable()})}});Ext.define("LSP.view.concept.SummeryForm",{extend:"Ext.form.Panel",alias:"widget.SummeryForm",closable:true,requires:["LSP.view.dropdowns.conceptWikiLookup"],initComponent:function(){var a=this;a.items=[{xtype:"container",height:"6%",margin:"5 5 5 5",name:"form_fields",layout:{type:"column"},items:[{xtype:"conceptWikiLookup"},{xtype:"button",padding:"5 5 5 5",text:"Look up",action:"look_up_concept"},{name:"utf8",xtype:"hidden",value:"&#x2713;"},{name:"authenticity_token",xtype:"hidden",value:$$("meta[name=csrf-token]")[0].readAttribute("content")}]},object_grid=Ext.widget("dynamicgrid2"),subject_grid=Ext.widget("dynamicgrid2")];object_grid.setTitle("Concept Properties");object_grid.setHeight("47%");subject_grid.setTitle("Concept Relations");subject_grid.setHeight("47%");a.callParent(arguments)}});Ext.define("LSP.controller.SummeryForm",{extend:"Ext.app.Controller",views:["concept.SummeryForm"],init:function(){this.control({"SummeryForm button[action=look_up_concept]":{click:this.lookUpConcept}})},lookUpConcept:function(b){var c=b.up("form"),a=c.getValues();subject_grid.store.proxy.actionMethods={read:"POST"};subject_grid.store.proxy.extraParams=a;subject_grid.store.proxy.api.read="/sparql_endpoint/concept_subject_summery.json";subject_grid.store.load();object_grid.store.proxy.actionMethods={read:"POST"};object_grid.store.proxy.extraParams=a;object_grid.store.proxy.api.read="/sparql_endpoint/concept_object_summery.json";object_grid.store.load()}});Ext.define("LSP.view.textmining.pmidTextMiningHitsForm",{extend:"Ext.form.Panel",alias:"widget.pmidTextMiningHits",requires:["LSP.view.dropdowns.pmidLookup"],closable:true,height:560,width:606,bodyPadding:10,layout:{type:"vbox",align:"stretch"},initComponent:function(){var a=this;Ext.applyIf(a,{items:[{xtype:"container",activeItem:0,layout:{type:"column"},items:[{xtype:"pmidLookup",margin:"0 10 0 10",labelWidth:75,width:650},{xtype:"button",text:"Search...",action:"query",disabled:true,width:120}]},{xtype:"fieldset",height:200,layout:"anchor",defaults:{labelWidth:75},title:"Bibliographic information",items:[{xtype:"displayfield",fieldLabel:"Title",name:"title",anchor:"100%"},{xtype:"textarea",height:150,readOnly:true,fieldLabel:"Abstract",name:"abstract",anchor:"100%"}]},{xtype:"dynamicgrid2",title:"Text mined concepts",gridBaseTitle:"Text mined concepts",name:"textmining_hits",flex:1}]});a.callParent(arguments)}});Ext.define("LSP.controller.pmidTextMiningHitsForm",{extend:"Ext.app.Controller",views:["textmining.pmidTextMiningHitsForm"],stores:["DynamicGrid"],refs:[{ref:"tmForm",selector:"pmidTextMiningHitsForm"}],init:function(){this.control({"pmidTextMiningHits button[action=query]":{click:this.submitQuery},"pmidTextMiningHits pmidLookup":{select:this.enableSubmit}})},enableSubmit:function(a){var c=a.up("form");var b=c.query("button[action=query]")[0];b.enable()},submitQuery:function(b){var c=b.up("form");b.disable();values=c.getValues();var a=c.query("dynamicgrid2")[0];a.store.proxy.extraParams={pubmed_uri:values.pmid_uri};a.store.proxy.api.read="core_api_calls/pmid2concepts.json";a.store.load();a.store.on("load",function(){c.doLayout();b.enable()});Ext.Ajax.request({url:"core_api_calls/pmid2title.json",params:{pubmed_uri:values.pmid_uri},success:function(d){var e=d.responseText;c.form.findField("title").setValue(Ext.JSON.decode(e).title)}})}});Ext.define("LSP.view.pathways.pathwayByProteinForm",{extend:"Ext.form.Panel",alias:"widget.pathwayByProteinForm",requires:["LSP.view.dropdowns.wikiPathwaysProteinLookup"],closable:true,height:560,width:606,bodyPadding:10,layout:{type:"vbox",align:"stretch"},initComponent:function(){var a=this;Ext.applyIf(a,{items:[{xtype:"container",activeItem:0,layout:{type:"column"},items:[{xtype:"wikiPathwaysProteinLookup",margin:"0 10 0 10",labelWidth:100,width:650},{xtype:"button",text:"Search...",action:"query",disabled:true,width:120}]},{xtype:"dynamicgrid2",title:"Pathways including protein",gridBaseTitle:"Pathways including protein",name:"pathway_by_protein_grid",flex:1,dockedItems:[{xtype:"toolbar",dock:"top",items:[{xtype:"button",text:"View pathway in WikiPathways applet (Google Chrome only)",action:"wp_view"}]}]}]});a.callParent(arguments)}});Ext.define("LSP.controller.pathwayByProteinForm",{extend:"Ext.app.Controller",views:["pathways.pathwayByProteinForm","pathways.wikiPathwaysWindow"],stores:["DynamicGrid"],refs:[{ref:"pwbyproteinForm",selector:"pathwayByProteinForm"}],init:function(){this.control({"pathwayByProteinForm button[action=query]":{click:this.submitQuery},"pathwayByProteinForm button[action=wp_view]":{click:this.launchWPApplet},"pathwayByProteinForm wikiPathwaysProteinLookup":{select:this.enableSubmit}})},enableSubmit:function(a){var c=a.up("form");var b=c.query("button[action=query]")[0];b.enable()},launchWPApplet:function(c){var e=c.up("form");var b=e.query("dynamicgrid2")[0];var d=b.getSelectionModel().getSelection()[0];if(d){var a=Ext.widget("wikiPathwaysWindow",{wpathway_id:d.data.Pathway_id})}},submitQuery:function(b){var c=b.up("form");b.disable();values=c.getValues();var a=c.query("dynamicgrid2")[0];a.store.proxy.extraParams=values;a.store.proxy.api.read="core_api_calls/wiki_pathways_by_protein.json";a.store.load();a.store.on("load",function(){c.doLayout();b.enable()})}});Ext.define("LSP.view.pathways.pathwayByCompoundForm",{extend:"Ext.form.Panel",alias:"widget.pathwayByCompoundForm",requires:["LSP.view.dropdowns.wikiPathwaysCompoundLookup"],closable:true,height:560,width:606,bodyPadding:10,layout:{type:"vbox",align:"stretch"},initComponent:function(){var a=this;Ext.applyIf(a,{items:[{xtype:"container",activeItem:0,layout:{type:"column"},items:[{xtype:"wikiPathwaysCompoundLookup",margin:"0 10 0 10",labelWidth:100,width:650},{xtype:"button",text:"Search...",disabled:true,action:"query",width:120}]},{xtype:"dynamicgrid2",title:"Pathways including compound",gridBaseTitle:"Pathways including compound",name:"pathway_by_cmpd_grid",flex:1,dockedItems:[{xtype:"toolbar",dock:"top",items:[{xtype:"button",text:"View pathway in WikiPathways applet (Google Chrome only)",action:"wp_view"}]}]}]});a.callParent(arguments)}});Ext.define("LSP.controller.pathwayByCompoundForm",{extend:"Ext.app.Controller",views:["pathways.pathwayByCompoundForm","pathways.wikiPathwaysWindow"],stores:["DynamicGrid"],refs:[{ref:"pwbycmpdForm",selector:"pathwayByCompoundForm"}],init:function(){this.control({"pathwayByCompoundForm button[action=query]":{click:this.submitQuery},"pathwayByCompoundForm button[action=wp_view]":{click:this.launchWPApplet},"pathwayByCompoundForm wikiPathwaysCompoundLookup":{select:this.enableSubmit}})},enableSubmit:function(c){var b=c.up("form");var a=b.query("button[action=query]")[0];a.enable()},launchWPApplet:function(c){var e=c.up("form");var b=e.query("dynamicgrid2")[0];var d=b.getSelectionModel().getSelection()[0];if(d){var a=Ext.widget("wikiPathwaysWindow",{wpathway_id:d.data.Pathway_id})}},submitQuery:function(b){var c=b.up("form");b.disable();values=c.getValues();var a=c.query("dynamicgrid2")[0];a.store.proxy.extraParams=values;a.store.proxy.api.read="core_api_calls/wiki_pathways_by_compound.json";a.store.load();a.store.on("load",function(e,d,f){alert(f);c.doLayout();b.enable()})}});Ext.define("LSP.view.cmpd_by_name.CmpdByNameForm",{extend:"Ext.form.Panel",alias:"widget.CmpdByNameForm",closable:true,requires:["LSP.view.dropdowns.conceptWikiCompoundLookup","LSP.view.dynamicgrid.DynamicGrid3","LSP.view.cmpd_by_name.CmpdByNameSingleDisplayForm"],layout:{type:"vbox",align:"stretch"},initComponent:function(){var a=this;Ext.applyIf(a,{items:[{xtype:"label",html:'<font face="verdana" color="grey">Hint: Type in compound name. E.g. "Aspirin"</font>',labelWidth:400,padding:"5 0 0 140"},{xtype:"container",margin:"0 5 5 5",name:"form_fields",layout:{type:"column"},style:"background-color: #fff;",items:[{xtype:"conceptWikiCompoundLookup",fieldLabel:"Compound name",forceSelection:true,allowBlank:false,typeAhead:true,typeAheadDelay:250,queryDelay:70},{xtype:"button",padding:"5 5 5 5",text:"Search...",itemId:"CmpdByNameSubmit_id",disabled:true,action:"query_cmpd_by_name"}]},{xtype:"CmpdByNameSingleDisplayForm",flex:1}]});this.callParent(arguments)}});Ext.define("LSP.view.Viewer",{extend:"Ext.tab.Panel",alias:"widget.viewer",requires:["LSP.view.usergrid.UserGrid","LSP.view.sparqlform.Queryform","LSP.view.larkc_sim_search.SimSearchForm","LSP.view.cmpd_by_name.CmpdByNameForm","LSP.view.target_by_name.TargetByNameForm","LSP.view.pharm_by_cmpd_name2.PharmByCmpdNameForm","LSP.view.pharm_by_target_name2.PharmByTargetNameForm","LSP.view.concept.SummeryForm","LSP.view.placeholder.temp","LSP.view.larkc_pharm_by_target.PharmEnzymeForm","LSP.view.textmining.pmidTextMiningHitsForm","LSP.view.pathways.pathwayByCompoundForm","LSP.view.pathways.pathwayByProteinForm"],activeItem:0,margins:"0 4 4 4",initComponent:function(){this.callParent(arguments)}});iconSize="small";Ext.define("LSP.view.Viewport",{extend:"Ext.container.Viewport",alias:"widget.lspviewport",requires:["LSP.view.Viewer","LSP.view.Navigator","LSP.view.Settings","LSP.view.user.Loginbutton","LSP.view.user.Logoutbutton","LSP.view.user.Newbutton","Ext.layout.container.Border","Ext.toolbar.Spacer"],layout:"border",initComponent:function(){var a=Ext.create("Ext.Img",{src:"images/ops_logo.png",bodyStyle:{background:"transparent"}});this.items=[{region:"north",id:"northView",height:60,border:false,bodyStyle:{background:"transparent"},layout:{type:"hbox",padding:"5",align:"middle"},items:[a,{id:"lsp-header",xtype:"box",html:"<h1>Open PHACTS GUI</h1>"},{xtype:"tbspacer",flex:1},{xtype:"displayfield",value:"Testing connection to OPS API...",width:400,name:"ops_api_staus",id:"ops_api_staus_id"},{xtype:"tbspacer",flex:1},{xtype:"loginbutton",id:"loginButton",hidden:true},{xtype:"usernewbutton",id:"userNewButton",hidden:true},{xtype:"logoutbutton",id:"logoutButton",hidden:true}]},{region:"center",id:"centerView",xtype:"viewer"},{region:"west",id:"westView",width:225,xtype:"navigator"}];this.callParent(arguments)}});Ext.define("LSP.view.standardToolbar.StandardToolbar",{extend:"Ext.toolbar.Toolbar",alias:"widget.standardtoolbar",requires:["LSP.view.buttons.New","LSP.view.buttons.Edit","LSP.view.buttons.Delete","LSP.view.buttons.Filter"],initComponent:function(){var a={xtype:"toolbar",dock:"top",items:[{text:"Reload",name:"load-button",action:"load",hidden:true,iconCls:"icon-reload",listeners:{click:function(e,d,f){Ext.getCmp(this.ownerCt.ownerCt.id).store.proxy.api.read=this.ownerCt.ownerCt.url;Ext.getCmp(this.ownerCt.ownerCt.id).store.load()}}},{xtype:"newbutton",name:"new-button"},{xtype:"editbutton",name:"edit-button"},{xtype:"deletebutton",name:"delete-button"},{xtype:"filterbutton",name:"filter-button"},{xtype:"button",name:"exporter-button",hidden:false,text:"Download to Excel"}]};Ext.apply(this,a);Ext.apply(this.initialConfig,a);this.callParent(arguments)},onRender:function(b,a){LSP.view.standardToolbar.StandardToolbar.superclass.onRender.call(this,b,a)}});Ext.Loader.setConfig({enabled:true});Ext.Loader.setPath("Ext.ux.grid","ext/examples/ux/grid");Ext.define("LSP.view.dynamicgrid.Grid",{extend:"Ext.grid.GridPanel",alias:"widget.dynamicgrid",requires:["Ext.grid.RowNumberer","Ext.form.*","Ext.ux.grid.FiltersFeature","LSP.view.standardToolbar.StandardToolbar"],initComponent:function(){var c=Ext.create("Ext.grid.feature.Grouping",{groupHeaderTpl:'Group: {name} ({rows.length} Item{[values.rows.length > 1 ? "s" : ""]})'});var b={ftype:"filters",encode:false,local:true};var a={store:{fields:[],proxy:{type:"ajax",api:{read:""},reader:{type:"json",root:"objects",totalProperty:"totalCount"}}},dockedItems:[{xtype:"standardtoolbar"}],columns:[{name:"temp",hidden:true}],rowNumberer:true,defaultWidth:200,features:[c,b]};Ext.apply(this,a);Ext.apply(this.initialConfig,a);this.callParent(arguments)},buttonRender:function(a){hiddenButtons=this.down("toolbar").items.items;hiddenButtons.forEach(function(b){a.forEach(function(c){if(b.name==c+"-button"){b.show()}})})},storeLoad:function(){if(typeof(this.store.proxy.reader.jsonData.columns)==="object"){var a=[];if(this.rowNumberer){a.push(Ext.create("Ext.grid.RowNumberer",{width:40}))}Ext.each(this.store.proxy.reader.jsonData.columns,function(c){a.push(c)});if(typeof(b)=="undefined"){var b=this.title}if(this.store.proxy.reader.jsonData.totalCount>0){this.setTitle(b+" - Records found: "+this.store.proxy.reader.jsonData.totalCount)}else{this.setTitle(b+" - Records found: No records found!")}this.reconfigure(this.store,a)}},onRender:function(b,a){LSP.view.dynamicgrid.Grid.superclass.onRender.call(this,b,a);this.store.on("load",this.storeLoad,this)}});Ext.define("LSP.controller.Grid",{extend:"Ext.app.Controller",views:["dynamicgrid.Grid"],stores:["Grids"],models:["Grid"]});(function(){var a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";function b(e){e=e.replace(/\r\n/g,"\n");var d="";for(var g=0;g<e.length;g++){var f=e.charCodeAt(g);if(f<128){d+=String.fromCharCode(f)}else{if((f>127)&&(f<2048)){d+=String.fromCharCode((f>>6)|192);d+=String.fromCharCode((f&63)|128)}else{d+=String.fromCharCode((f>>12)|224);d+=String.fromCharCode(((f>>6)&63)|128);d+=String.fromCharCode((f&63)|128)}}}return d}Ext.define("Ext.ux.exporter.Base64",{statics:{encode:function(e){var c="";var m,k,h,l,j,g,f;var d=0;e=b(e);while(d<e.length){m=e.charCodeAt(d++);k=e.charCodeAt(d++);h=e.charCodeAt(d++);l=m>>2;j=((m&3)<<4)|(k>>4);g=((k&15)<<2)|(h>>6);f=h&63;if(isNaN(k)){g=f=64}else{if(isNaN(h)){f=64}}c=c+a.charAt(l)+a.charAt(j)+a.charAt(g)+a.charAt(f)}return c}}})})();Ext.define("Ext.ux.exporter.Button",{extend:"Ext.Component",alias:"widget.exporterbutton",html:"<p></p>",config:{swfPath:"/flash/downloadify.swf",downloadImage:"/images/ext_reports/download.png",width:62,height:22,downloadName:"download"},constructor:function(b){b=b||{};this.initConfig();Ext.ux.exporter.Button.superclass.constructor.call(this,b);var a=this;this.store.on("load",function(){a.setComponent(a.up("dynamicgrid3"),b)},this,{delay:1000})},setComponent:function(b,a){this.component=b;this.store=!b.is?b:b.getStore();this.setDownloadify(a)},setDownloadify:function(b){var a=this;Downloadify.create(this.el.down("p").id,{filename:function(){return a.getDownloadName()+"."+Ext.ux.exporter.Exporter.getFormatterByName(a.formatter).extension},data:function(){return Ext.ux.exporter.Exporter.exportAny(a.component,a.formatter,b)},onComplete:function(){alert("Your File Has Been Saved!")},onCancel:function(){alert("You have cancelled the saving of this file.")},onError:function(){alert("You must put something in the File Contents or there will be nothing to save!")},transparent:false,swf:this.getSwfPath(),downloadImage:this.getDownloadImage(),width:this.getWidth(),height:this.getHeight(),transparent:true,append:true})}});Ext.define("Ext.ux.grid.menu.ListMenu",{extend:"Ext.menu.Menu",labelField:"text",loadingText:"Loading...",loadOnShow:true,single:false,constructor:function(b){this.selected=[];this.addEvents("checkchange");this.callParent([b=b||{}]);if(!b.store&&b.options){var c=[];for(var d=0,a=b.options.length;d<a;d++){var e=b.options[d];switch(Ext.type(e)){case"array":c.push(e);break;case"object":c.push([e.id,e[this.labelField]]);break;case"string":c.push([e,e]);break}}this.store=Ext.create("Ext.data.ArrayStore",{fields:["id",this.labelField],data:c,listeners:{load:this.onLoad,scope:this}});this.loaded=true}else{this.add({text:this.loadingText,iconCls:"loading-indicator"});this.store.on("load",this.onLoad,this)}},destroy:function(){if(this.store){this.store.destroyStore()}this.callParent()},show:function(){var a=null;return function(){if(arguments.length===0){this.callParent(a)}else{a=arguments;if(this.loadOnShow&&!this.loaded){this.store.load()}this.callParent(arguments)}}}(),onLoad:function(h,b){var g=this,a=g.isVisible(),e,j,c,d,f;g.hide(false);g.removeAll(true);e=g.single?Ext.id():null;for(d=0,f=b.length;d<f;d++){c=b[d].get("id");j=Ext.create("Ext.menu.CheckItem",{text:b[d].get(g.labelField),group:e,checked:Ext.Array.contains(g.selected,c),hideOnClick:false,value:c});j.on("checkchange",g.checkChange,g);g.add(j)}g.loaded=true;if(a){g.show()}g.fireEvent("load",g,b)},getSelected:function(){return this.selected},setSelected:function(a){a=this.selected=[].concat(a);if(this.loaded){this.items.each(function(d){d.setChecked(false,true);for(var c=0,b=a.length;c<b;c++){if(d.value==a[c]){d.setChecked(true,true)}}},this)}},checkChange:function(b,a){var c=[];this.items.each(function(d){if(d.checked){c.push(d.value)}},this);this.selected=c;this.fireEvent("checkchange",b,a)}});Ext.define("Ext.ux.grid.menu.RangeMenu",{extend:"Ext.menu.Menu",fieldCls:"Ext.form.field.Number",iconCls:{gt:"ux-rangemenu-gt",lt:"ux-rangemenu-lt",eq:"ux-rangemenu-eq"},fieldLabels:{gt:"Greater Than",lt:"Less Than",eq:"Equal To"},menuItemCfgs:{emptyText:"Enter Number...",selectOnFocus:false,width:155},menuItems:["lt","gt","-","eq"],constructor:function(a){var f=this,c,g,b,e,h,d,j;f.callParent(arguments);c=f.fields=f.fields||{};g=f.fieldCfg=f.fieldCfg||{};f.addEvents("update");f.updateTask=Ext.create("Ext.util.DelayedTask",f.fireUpdate,f);for(b=0,e=f.menuItems.length;b<e;b++){h=f.menuItems[b];if(h!=="-"){d={itemId:"range-"+h,enableKeyEvents:true,hideLabel:false,fieldLabel:f.iconTpl.apply({cls:f.iconCls[h]||"no-icon",text:f.fieldLabels[h]||"",src:Ext.BLANK_IMAGE_URL}),labelSeparator:"",labelWidth:29,listeners:{scope:f,change:f.onInputChange,keyup:f.onInputKeyUp,el:{click:function(k){k.stopPropagation()}}},activate:Ext.emptyFn,deactivate:Ext.emptyFn};Ext.apply(d,Ext.applyIf(c[h]||{},g[h]),f.menuItemCfgs);j=d.fieldCls||f.fieldCls;h=c[h]=Ext.create(j,d)}f.add(h)}},fireUpdate:function(){this.fireEvent("update",this)},getValue:function(){var a={},b,c;for(b in this.fields){c=this.fields[b];if(c.isValid()&&c.getValue()!==null){a[b]=c.getValue()}}return a},setValue:function(b){var a;for(a in this.fields){this.fields[a].setValue(a in b?b[a]:"")}this.fireEvent("update",this)},onInputKeyUp:function(b,a){if(a.getKey()===a.RETURN&&b.isValid()){a.stopEvent();this.hide()}},onInputChange:function(f){var e=this,c=e.fields,b=c.eq,d=c.gt,a=c.lt;if(f==b){if(d){d.setValue(null)}if(a){a.setValue(null)}}else{b.setValue(null)}this.updateTask.delay(this.updateBuffer)}},function(){this.prototype.iconTpl=Ext.create("Ext.XTemplate",'<img src="{src}" alt="{text}" class="'+Ext.baseCSSPrefix+'menu-item-icon ux-rangemenu-icon {cls}" />')});Ext.define("Ext.ux.grid.filter.Filter",{extend:"Ext.util.Observable",active:false,dataIndex:null,menu:null,updateBuffer:500,constructor:function(a){Ext.apply(this,a);this.addEvents("activate","deactivate","serialize","update");Ext.ux.grid.filter.Filter.superclass.constructor.call(this);this.menu=this.createMenu(Ext.applyIf({filtered:true},a));this.init(a);if(a&&a.value){this.setValue(a.value);this.setActive(a.active!==false,true);delete a.value}},destroy:function(){if(this.menu){this.menu.destroy()}this.clearListeners()},init:Ext.emptyFn,createMenu:function(a){return Ext.create("Ext.menu.Menu",a)},getValue:Ext.emptyFn,setValue:Ext.emptyFn,isActivatable:function(){return true},getSerialArgs:Ext.emptyFn,validateRecord:function(){return true},serialize:function(){var a=this.getSerialArgs();this.fireEvent("serialize",a,this);return a},fireUpdate:function(){if(this.active){this.fireEvent("update",this)}this.setActive(this.isActivatable())},setActive:function(b,a){if(this.active!=b){this.active=b;if(a!==true){this.fireEvent(b?"activate":"deactivate",this)}}}});Ext.define("Ext.ux.exporter.Formatter",{format:Ext.emptyFn,constructor:function(a){a=a||{};Ext.applyIf(a,{})}});Ext.define("Ext.ux.exporter.sdfFormatter.SdfFormatter",{extend:"Ext.ux.exporter.Formatter",contentType:"data:text/plain;base64,",extension:"sdf",format:function(b,c){var d=this;var a=[];b.each(function(e,f){a.push(this.buildRecord(c.columns,e,e.molfile))},this);return a.join("\n")+"\n"},buildRecord:function(c,e,b){var d=[];var a=e.raw.csid_uri.match(/http:\/\/rdf.chemspider.com\/(\d+)/)[1];Ext.each(c,function(g){var f=">  <";if(!g.hidden&&g.text!="&#160"){var j=e.data[g.dataIndex];if(j.text!==undefined){j=j.text}var k=this.stripTags(j);var h=this.escapeTextSeperator(k);f=f+this.stripTags(g.text)+"> ("+a+")\n";f=f+h+"\n";if(h!==""){d.push(f)}}},this);return b+d.join("\n")+"\n$$$$"},stripTags:function(b){if(typeof(b)==="string"){b=b.replace(/<(.|\n)*?>/gi,"")}var a=document.createElement("textarea");a.innerHTML=b;return a.value},escapeTextSeperator:function(b){if(typeof(b)==="string"){b=b.replace(/"/gi,'""')}var a=document.createElement("textarea");a.innerHTML=b;return a.value}});Ext.define("Ext.ux.exporter.csvFormatter.CsvFormatter",{extend:"Ext.ux.exporter.Formatter",contentType:"data:text/csv;base64,",separator:";",extension:"csv",format:function(a,b){this.columns=b.columns||(a.fields?a.fields.items:a.model.prototype.fields.items);return this.getHeaders()+"\n"+this.getRows(a)},getHeaders:function(a){var b=[],c;Ext.each(this.columns,function(d){var e;if(d.text!=undefined){e=d.text}else{if(d.name){e=d.name.replace(/_/g," ");e=Ext.String.capitalize(e)}}if(d.text!="&#160"){b.push(e)}},this);return b.join(this.separator)},getRows:function(a){var b=[];a.each(function(c,d){b.push(this.geCell(c,d))},this);return b.join("\n")},geCell:function(a,c){var b=[];Ext.each(this.columns,function(e){var d=e.name||e.dataIndex;if(d){if(Ext.isFunction(e.renderer)){var f=e.renderer(a.get(d),null,a)}else{var f=a.get(d)}b.push(f)}});return b.join(this.separator)}});Ext.define("Ext.ux.grid.filter.BooleanFilter",{extend:"Ext.ux.grid.filter.Filter",alias:"gridfilter.boolean",defaultValue:false,yesText:"Yes",noText:"No",init:function(a){var c=Ext.id();this.options=[Ext.create("Ext.menu.CheckItem",{text:this.yesText,group:c,checked:this.defaultValue===true}),Ext.create("Ext.menu.CheckItem",{text:this.noText,group:c,checked:this.defaultValue===false})];this.menu.add(this.options[0],this.options[1]);for(var b=0;b<this.options.length;b++){this.options[b].on("click",this.fireUpdate,this);this.options[b].on("checkchange",this.fireUpdate,this)}},getValue:function(){return this.options[0].checked},setValue:function(a){this.options[a?0:1].setChecked(true)},getSerialArgs:function(){var a={type:"boolean",value:this.getValue()};return a},validateRecord:function(a){return a.get(this.dataIndex)==this.getValue()}});Ext.define("Ext.ux.grid.filter.DateFilter",{extend:"Ext.ux.grid.filter.Filter",alias:"gridfilter.date",uses:["Ext.picker.Date","Ext.menu.Menu"],afterText:"After",beforeText:"Before",compareMap:{before:"lt",after:"gt",on:"eq"},dateFormat:"m/d/Y",menuItems:["before","after","-","on"],menuItemCfgs:{selectOnFocus:true,width:125},onText:"On",pickerOpts:{},init:function(d){var g=this,c,e,a,f,b;c=Ext.apply(g.pickerOpts,{xtype:"datepicker",minDate:g.minDate,maxDate:g.maxDate,format:g.dateFormat,listeners:{scope:g,select:g.onMenuSelect}});g.fields={};for(e=0,a=g.menuItems.length;e<a;e++){f=g.menuItems[e];if(f!=="-"){b={itemId:"range-"+f,text:g[f+"Text"],menu:Ext.create("Ext.menu.Menu",{items:[Ext.apply(c,{itemId:f})]}),listeners:{scope:g,checkchange:g.onCheckChange}};f=g.fields[f]=Ext.create("Ext.menu.CheckItem",b)}g.menu.add(f)}},onCheckChange:function(){this.setActive(this.isActivatable());this.fireEvent("update",this)},onInputKeyUp:function(c,b){var a=b.getKey();if(a==b.RETURN&&c.isValid()){b.stopEvent();this.menu.hide()}},onMenuSelect:function(c,b){var a=this.fields,d=this.fields[c.itemId];d.setChecked(true);if(d==a.on){a.before.setChecked(false,true);a.after.setChecked(false,true)}else{a.on.setChecked(false,true);if(d==a.after&&this.getFieldValue("before")<b){a.before.setChecked(false,true)}else{if(d==a.before&&this.getFieldValue("after")>b){a.after.setChecked(false,true)}}}this.fireEvent("update",this);c.up("menu").hide()},getValue:function(){var b,a={};for(b in this.fields){if(this.fields[b].checked){a[b]=this.getFieldValue(b)}}return a},setValue:function(c,b){var a;for(a in this.fields){if(c[a]){this.getPicker(a).setValue(c[a]);this.fields[a].setChecked(true)}else{if(!b){this.fields[a].setChecked(false)}}}this.fireEvent("update",this)},isActivatable:function(){var a;for(a in this.fields){if(this.fields[a].checked){return true}}return false},getSerialArgs:function(){var a=[];for(var b in this.fields){if(this.fields[b].checked){a.push({type:"date",comparison:this.compareMap[b],value:Ext.Date.format(this.getFieldValue(b),this.dateFormat)})}}return a},getFieldValue:function(a){return this.getPicker(a).getValue()},getPicker:function(a){return this.fields[a].menu.items.first()},validateRecord:function(b){var c,e,d=b.get(this.dataIndex),a=Ext.Date.clearTime;if(!Ext.isDate(d)){return false}d=a(d,true).getTime();for(c in this.fields){if(this.fields[c].checked){e=a(this.getFieldValue(c),true).getTime();if(c=="before"&&e<=d){return false}if(c=="after"&&e>=d){return false}if(c=="on"&&e!=d){return false}}}return true}});Ext.define("Ext.ux.grid.filter.NumericFilter",{extend:"Ext.ux.grid.filter.Filter",alias:"gridfilter.numeric",uses:["Ext.form.field.Number"],createMenu:function(a){var b=this,c;c=Ext.create("Ext.ux.grid.menu.RangeMenu",a);c.on("update",b.fireUpdate,b);return c},getValue:function(){return this.menu.getValue()},setValue:function(a){this.menu.setValue(a)},isActivatable:function(){var a=this.getValue(),b;for(b in a){if(a[b]!==undefined){return true}}return false},getSerialArgs:function(){var c,b=[],a=this.menu.getValue();for(c in a){b.push({type:"numeric",comparison:c,value:a[c]})}return b},validateRecord:function(a){var d=a.get(this.dataIndex),b=this.getValue(),c=Ext.isNumber;if(c(b.eq)&&d!=b.eq){return false}if(c(b.lt)&&d>=b.lt){return false}if(c(b.gt)&&d<=b.gt){return false}return true}});Ext.define("Ext.ux.grid.filter.ListFilter",{extend:"Ext.ux.grid.filter.Filter",alias:"gridfilter.list",phpMode:false,init:function(a){this.dt=Ext.create("Ext.util.DelayedTask",this.fireUpdate,this)},createMenu:function(a){var b=Ext.create("Ext.ux.grid.menu.ListMenu",a);b.on("checkchange",this.onCheckChange,this);return b},getValue:function(){return this.menu.getSelected()},setValue:function(a){this.menu.setSelected(a);this.fireEvent("update",this)},isActivatable:function(){return this.getValue().length>0},getSerialArgs:function(){return{type:"list",value:this.phpMode?this.getValue().join(","):this.getValue()}},onCheckChange:function(){this.dt.delay(this.updateBuffer)},validateRecord:function(a){var b=this.getValue();return Ext.Array.indexOf(b,a.get(this.dataIndex))>-1}});Ext.define("Ext.ux.exporter.excelFormatter.ExcelFormatter",{extend:"Ext.ux.exporter.Formatter",uses:["Ext.ux.exporter.excelFormatter.Cell","Ext.ux.exporter.excelFormatter.Style","Ext.ux.exporter.excelFormatter.Worksheet","Ext.ux.exporter.excelFormatter.Workbook"],contentType:"data:application/vnd.ms-excel;base64,",extension:"xls",format:function(b,c){var a=new Ext.ux.exporter.excelFormatter.Workbook(c);a.addWorksheet(b,c||{});return a.render()}});Ext.define("Ext.ux.grid.filter.StringFilter",{extend:"Ext.ux.grid.filter.Filter",alias:"gridfilter.string",iconCls:"ux-gridfilter-text-icon",emptyText:"Enter Filter Text...",selectOnFocus:true,width:125,init:function(a){Ext.applyIf(a,{enableKeyEvents:true,iconCls:this.iconCls,hideLabel:true,listeners:{scope:this,keyup:this.onInputKeyUp,el:{click:function(b){b.stopPropagation()}}}});this.inputItem=Ext.create("Ext.form.field.Text",a);this.menu.add(this.inputItem);this.updateTask=Ext.create("Ext.util.DelayedTask",this.fireUpdate,this)},getValue:function(){return this.inputItem.getValue()},setValue:function(a){this.inputItem.setValue(a);this.fireEvent("update",this)},isActivatable:function(){return this.inputItem.getValue().length>0},getSerialArgs:function(){return{type:"string",value:this.getValue()}},validateRecord:function(a){var b=a.get(this.dataIndex);if(typeof b!="string"){return(this.getValue().length===0)}return b.toLowerCase().indexOf(this.getValue().toLowerCase())>-1},onInputKeyUp:function(c,b){var a=b.getKey();if(a==b.RETURN&&c.isValid()){b.stopEvent();this.menu.hide();return}this.updateTask.delay(this.updateBuffer)}});Ext.define("Ext.ux.exporter.excelFormatter.Workbook",{constructor:function(a){a=a||{};Ext.apply(this,a,{title:"Workbook",worksheets:[],compiledWorksheets:[],cellBorderColor:"#e4e4e4",styles:[],compiledStyles:[],hasDefaultStyle:true,hasStripeStyles:true,windowHeight:9000,windowWidth:50000,protectStructure:false,protectWindows:false});if(this.hasDefaultStyle){this.addDefaultStyle()}if(this.hasStripeStyles){this.addStripedStyles()}this.addTitleStyle();this.addHeaderStyle()},render:function(){this.compileStyles();this.joinedCompiledStyles=this.compiledStyles.join("");this.compileWorksheets();this.joinedWorksheets=this.compiledWorksheets.join("");return this.tpl.apply(this)},addWorksheet:function(a,b){var c=new Ext.ux.exporter.excelFormatter.Worksheet(a,b);this.worksheets.push(c);return c},addStyle:function(a){var b=new Ext.ux.exporter.excelFormatter.Style(a||{});this.styles.push(b);return b},compileStyles:function(){this.compiledStyles=[];Ext.each(this.styles,function(a){this.compiledStyles.push(a.render())},this);return this.compiledStyles},compileWorksheets:function(){this.compiledWorksheets=[];Ext.each(this.worksheets,function(a){this.compiledWorksheets.push(a.render())},this);return this.compiledWorksheets},tpl:new Ext.XTemplate('<?xml version="1.0" encoding="utf-8"?>','<ss:Workbook xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns:o="urn:schemas-microsoft-com:office:office">',"<o:DocumentProperties>","<o:Title>{title}</o:Title>","</o:DocumentProperties>","<ss:ExcelWorkbook>","<ss:WindowHeight>{windowHeight}</ss:WindowHeight>","<ss:WindowWidth>{windowWidth}</ss:WindowWidth>","<ss:ProtectStructure>{protectStructure}</ss:ProtectStructure>","<ss:ProtectWindows>{protectWindows}</ss:ProtectWindows>","</ss:ExcelWorkbook>","<ss:Styles>","{joinedCompiledStyles}","</ss:Styles>","{joinedWorksheets}","</ss:Workbook>"),addDefaultStyle:function(){var a=[{name:"Color",value:this.cellBorderColor},{name:"Weight",value:"1"},{name:"LineStyle",value:"Continuous"}];this.addStyle({id:"Default",attributes:[{name:"Alignment",properties:[{name:"Vertical",value:"Top"},{name:"WrapText",value:"1"}]},{name:"Font",properties:[{name:"FontName",value:"arial"},{name:"Size",value:"10"}]},{name:"Interior"},{name:"NumberFormat"},{name:"Protection"},{name:"Borders",children:[{name:"Border",properties:[{name:"Position",value:"Top"}].concat(a)},{name:"Border",properties:[{name:"Position",value:"Bottom"}].concat(a)},{name:"Border",properties:[{name:"Position",value:"Left"}].concat(a)},{name:"Border",properties:[{name:"Position",value:"Right"}].concat(a)}]}]})},addTitleStyle:function(){this.addStyle({id:"title",attributes:[{name:"Borders"},{name:"Font"},{name:"NumberFormat",properties:[{name:"Format",value:"@"}]},{name:"Alignment",properties:[{name:"WrapText",value:"1"},{name:"Horizontal",value:"Center"},{name:"Vertical",value:"Center"}]}]})},addHeaderStyle:function(){this.addStyle({id:"headercell",attributes:[{name:"Font",properties:[{name:"Bold",value:"1"},{name:"Size",value:"10"}]},{name:"Interior",properties:[{name:"Pattern",value:"Solid"},{name:"Color",value:"#A3C9F1"}]},{name:"Alignment",properties:[{name:"WrapText",value:"1"},{name:"Horizontal",value:"Center"}]}]})},addStripedStyles:function(){this.addStyle({id:"even",attributes:[{name:"Interior",properties:[{name:"Pattern",value:"Solid"},{name:"Color",value:"#CCFFFF"}]}]});this.addStyle({id:"odd",attributes:[{name:"Interior",properties:[{name:"Pattern",value:"Solid"},{name:"Color",value:"#CCCCFF"}]}]});Ext.each(["even","odd"],function(a){this.addChildNumberFormatStyle(a,a+"date","[ENG][$-409]dd-mmm-yyyy;@");this.addChildNumberFormatStyle(a,a+"int","0");this.addChildNumberFormatStyle(a,a+"float","0.00")},this)},addChildNumberFormatStyle:function(a,c,b){this.addStyle({id:c,parentStyle:"even",attributes:[{name:"NumberFormat",properties:[{name:"Format",value:b}]}]})}});Ext.define("Ext.ux.exporter.excelFormatter.Worksheet",{constructor:function(a,b){b=b||{};this.store=a;Ext.applyIf(b,{hasTitle:true,hasHeadings:true,stripeRows:true,title:"Workbook",columns:a.fields==undefined?{}:a.fields.items});Ext.apply(this,b);Ext.ux.exporter.excelFormatter.Worksheet.superclass.constructor.apply(this,arguments)},dateFormatString:"Y-m-d",worksheetTpl:new Ext.XTemplate('<ss:Worksheet ss:Name="{title}">',"<ss:Names>",'<ss:NamedRange ss:Name="Print_Titles" ss:RefersTo="=\'{title}\'!R1:R2" />',"</ss:Names>",'<ss:Table x:FullRows="1" x:FullColumns="1" ss:ExpandedColumnCount="{colCount}" ss:ExpandedRowCount="{rowCount}">',"{columns}",'<ss:Row ss:Height="38">','<ss:Cell ss:StyleID="title" ss:MergeAcross="{colCount - 1}">','<ss:Data xmlns:html="http://www.w3.org/TR/REC-html40" ss:Type="String">','<html:B><html:U><html:Font html:Size="15">{title}','</html:Font></html:U></html:B></ss:Data><ss:NamedCell ss:Name="Print_Titles" />',"</ss:Cell>","</ss:Row>",'<ss:Row ss:AutoFitHeight="1">',"{header}","</ss:Row>","{rows}","</ss:Table>","<x:WorksheetOptions>","<x:PageSetup>",'<x:Layout x:CenterHorizontal="1" x:Orientation="Landscape" />','<x:Footer x:Data="Page &amp;P of &amp;N" x:Margin="0.5" />','<x:PageMargins x:Top="0.5" x:Right="0.5" x:Left="0.5" x:Bottom="0.8" />',"</x:PageSetup>","<x:FitToPage />","<x:Print>","<x:PrintErrors>Blank</x:PrintErrors>","<x:FitWidth>1</x:FitWidth>","<x:FitHeight>32767</x:FitHeight>","<x:ValidPrinterInfo />","<x:VerticalResolution>600</x:VerticalResolution>","</x:Print>","<x:Selected />","<x:DoNotDisplayGridlines />","<x:ProtectObjects>False</x:ProtectObjects>","<x:ProtectScenarios>False</x:ProtectScenarios>","</x:WorksheetOptions>","</ss:Worksheet>"),render:function(a){return this.worksheetTpl.apply({header:this.buildHeader(),columns:this.buildColumns().join(""),rows:this.buildRows().join(""),colCount:this.columns.length,rowCount:this.store.getCount()+2,title:this.title})},buildColumns:function(){var a=[];Ext.each(this.columns,function(b){a.push(this.buildColumn())},this);return a},buildColumn:function(a){return Ext.String.format('<ss:Column ss:AutoFitWidth="1" ss:Width="{0}" />',a||164)},buildRows:function(){var a=[];this.store.each(function(b,c){a.push(this.buildRow(b,c))},this);return a},buildHeader:function(){var a=[];Ext.each(this.columns,function(b){var c;if(b.text!=undefined){c=b.text}else{if(b.name){c=b.name.replace(/_/g," ");c=Ext.String.capitalize(c)}}a.push(Ext.String.format('<ss:Cell ss:StyleID="headercell"><ss:Data ss:Type="String">{0}</ss:Data><ss:NamedCell ss:Name="Print_Titles" /></ss:Cell>',c))},this);return a.join("")},buildRow:function(a,c){var d,b=[];if(this.stripeRows===true){d=c%2==0?"even":"odd"}Ext.each(this.columns,function(f){var e=f.name||f.dataIndex;if(e){if(Ext.isFunction(f.renderer)){var h=f.renderer(a.get(e),null,a),g="String"}else{var h=a.get(e),g=this.typeMappings[f.type||a.fields.get(e).type.type]}b.push(this.buildCell(h,g,d).render())}},this);return Ext.String.format("<ss:Row>{0}</ss:Row>",b.join(""))},buildCell:function(c,b,a){if(b=="DateTime"&&Ext.isFunction(c.format)){c=c.format(this.dateFormatString)}return new Ext.ux.exporter.excelFormatter.Cell({value:c,type:b,style:a})},typeMappings:{"int":"Number",string:"String","float":"Number",date:"DateTime"}});Ext.define("Ext.ux.exporter.excelFormatter.Style",{constructor:function(a){a=a||{};Ext.apply(this,a,{parentStyle:"",attributes:[]});Ext.ux.exporter.excelFormatter.Style.superclass.constructor.apply(this,arguments);if(this.id==undefined){throw new Error("An ID must be provided to Style")}this.preparePropertyStrings()},preparePropertyStrings:function(){Ext.each(this.attributes,function(a,b){this.attributes[b].propertiesString=this.buildPropertyString(a);this.attributes[b].children=a.children||[];Ext.each(a.children,function(d,c){this.attributes[b].children[c].propertiesString=this.buildPropertyString(d)},this)},this)},buildPropertyString:function(b){var a="";Ext.each(b.properties||[],function(c){a+=Ext.String.format('ss:{0}="{1}" ',c.name,c.value)},this);return a},render:function(){return this.tpl.apply(this)},tpl:new Ext.XTemplate('<tpl if="parentStyle.length == 0">','<ss:Style ss:ID="{id}">',"</tpl>",'<tpl if="parentStyle.length != 0">','<ss:Style ss:ID="{id}" ss:Parent="{parentStyle}">',"</tpl>",'<tpl for="attributes">','<tpl if="children.length == 0">',"<ss:{name} {propertiesString} />","</tpl>",'<tpl if="children.length > 0">',"<ss:{name} {propertiesString}>",'<tpl for="children">',"<ss:{name} {propertiesString} />","</tpl>","</ss:{name}>","</tpl>","</tpl>","</ss:Style>")});Ext.define("Ext.ux.exporter.excelFormatter.Cell",{constructor:function(a){Ext.applyIf(a,{type:"String"});Ext.apply(this,a);Ext.ux.exporter.excelFormatter.Cell.superclass.constructor.apply(this,arguments)},render:function(){return this.tpl.apply(this)},tpl:new Ext.XTemplate('<ss:Cell ss:StyleID="{style}">','<ss:Data ss:Type="{type}"><![CDATA[{value}]]></ss:Data>',"</ss:Cell>")});Ext.Loader.setConfig({enabled:true});Ext.create("Ext.app.Application",{name:"LSP",appFolder:"app",controllers:["Users","grids.DynamicGrid","Grid","NavigationTree","Queryform","SimSearchForm","CmpdByNameForm","TargetByNameForm","PharmByTargetNameForm","PharmByCmpdNameForm","PharmEnzymeForm","SummeryForm","Settings","pmidTextMiningHitsForm","pathwayByCompoundForm","pathwayByProteinForm"],autoCreateViewport:true,launch:function(){Ext.Loader.setConfig({enabled:true,paths:{CS:"chemspider/lib"}})}});
